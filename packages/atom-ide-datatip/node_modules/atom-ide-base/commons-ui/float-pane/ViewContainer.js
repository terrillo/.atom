"use strict";

var _$template = require("solid-js/web").template;

var _$delegateEvents = require("solid-js/web").delegateEvents;

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ViewContainer = ViewContainer;
exports.DATATIP_ACTIONS = void 0;

var _web = require("solid-js/web");

var _MarkdownView = require("./MarkdownView");

var _SnippetView = require("./SnippetView");

var _ReactView = require("./ReactView");

const _tmpl$ = _$template(`<div></div>`, 2);

const DATATIP_ACTIONS = Object.freeze({
  PIN: "PIN",
  CLOSE: "CLOSE"
});
exports.DATATIP_ACTIONS = DATATIP_ACTIONS;
const IconsForAction = {
  [DATATIP_ACTIONS.PIN]: "pin",
  [DATATIP_ACTIONS.CLOSE]: "x"
};

/** A component for a decoration pane */
function ViewContainer(props) {
  return (() => {
    const _el$ = _tmpl$.cloneNode(true);

    (0, _web.spread)(_el$, () => props.onMouseDown, false, true);

    _$spread(_el$, () => props.onClickCapture, false, true);

    (0, _web.insert)(_el$, (() => {
      const _c$ = (0, _web.memo)(() => props.component !== undefined, true);

      return () => _c$() ? (0, _web.createComponent)(_ReactView.ReactView, (0, _web.mergeProps)(props.component, {})) : undefined;
    })(), null);
    (0, _web.insert)(_el$, (() => {
      const _c$2 = (0, _web.memo)(() => props.snippet !== undefined, true);

      return () => _c$2() ? (0, _web.createComponent)(_SnippetView.SnippetView, (0, _web.mergeProps)(props.snippet, {})) : undefined;
    })(), null);
    (0, _web.insert)(_el$, (() => {
      const _c$3 = (0, _web.memo)(() => props.markdown !== undefined, true);

      return () => _c$3() ? (0, _web.createComponent)(_MarkdownView.MarkdownView, (0, _web.mergeProps)(props.markdown, {})) : undefined;
    })(), null);
    (0, _web.insert)(_el$, (() => {
      const _c$4 = (0, _web.memo)(() => props.action !== undefined, true);

      return () => _c$4() ? (() => {
        const _el$2 = _tmpl$.cloneNode(true);

        _el$2.$$click = () => {
          var _props$onActionClick;

          (_props$onActionClick = props.onActionClick) === null || _props$onActionClick === void 0 ? void 0 : _props$onActionClick.call(props, event);
        };

        (0, _web.effect)(_p$ => {
          const _v$ = `datatip-pin-button icon-${IconsForAction[props.action]}`,
                _v$2 = props.actionTitle;
          _v$ !== _p$._v$ && (_el$2.className = _p$._v$ = _v$);
          _v$2 !== _p$._v$2 && (0, _web.setAttribute)(_el$2, "title", _p$._v$2 = _v$2);
          return _p$;
        }, {
          _v$: undefined,
          _v$2: undefined
        });
        return _el$2;
      })() : undefined;
    })(), null);
    (0, _web.effect)(() => {
      var _props$className;

      return _el$.className = (_props$className = props.className) !== null && _props$className !== void 0 ? _props$className : "datatip-element";
    });
    return _el$;
  })();
}

_$delegateEvents(["click"]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy1jb21tb25zLXVpL2Zsb2F0LXBhbmUvVmlld0NvbnRhaW5lci50c3giXSwibmFtZXMiOlsiREFUQVRJUF9BQ1RJT05TIiwiT2JqZWN0IiwiZnJlZXplIiwiUElOIiwiQ0xPU0UiLCJJY29uc0ZvckFjdGlvbiIsIlZpZXdDb250YWluZXIiLCJwcm9wcyIsIm9uTW91c2VEb3duIiwib25DbGlja0NhcHR1cmUiLCJjb21wb25lbnQiLCJ1bmRlZmluZWQiLCJzbmlwcGV0IiwibWFya2Rvd24iLCJhY3Rpb24iLCJvbkFjdGlvbkNsaWNrIiwiZXZlbnQiLCJhY3Rpb25UaXRsZSIsImNsYXNzTmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVPLE1BQU1BLGVBQWUsR0FBR0MsTUFBTSxDQUFDQyxNQUFQLENBQWM7QUFDM0NDLEVBQUFBLEdBQUcsRUFBRSxLQURzQztBQUUzQ0MsRUFBQUEsS0FBSyxFQUFFO0FBRm9DLENBQWQsQ0FBeEI7O0FBS1AsTUFBTUMsY0FBYyxHQUFHO0FBQ3JCLEdBQUNMLGVBQWUsQ0FBQ0csR0FBakIsR0FBdUIsS0FERjtBQUVyQixHQUFDSCxlQUFlLENBQUNJLEtBQWpCLEdBQXlCO0FBRkosQ0FBdkI7O0FBaUJBO0FBQ08sU0FBU0UsYUFBVCxDQUF1QkMsS0FBdkIsRUFBcUM7QUFDMUM7QUFBQTs7QUFBQSxpQ0FDNERBLEtBQUssQ0FBQ0MsV0FEbEU7O0FBQUEseUJBQ21GRCxLQUFLLENBQUNFLGNBRHpGOztBQUFBO0FBQUEsdUNBRUtGLEtBQUssQ0FBQ0csU0FBTixLQUFvQkMsU0FGekI7O0FBQUEsbUJBRUssNkVBQStDSixLQUFLLENBQUNHLFNBQXJELFNBQXFFQyxTQUYxRTtBQUFBO0FBQUE7QUFBQSx3Q0FHS0osS0FBSyxDQUFDSyxPQUFOLEtBQWtCRCxTQUh2Qjs7QUFBQSxtQkFHSyxrRkFBK0NKLEtBQUssQ0FBQ0ssT0FBckQsU0FBbUVELFNBSHhFO0FBQUE7QUFBQTtBQUFBLHdDQUlLSixLQUFLLENBQUNNLFFBQU4sS0FBbUJGLFNBSnhCOztBQUFBLG1CQUlLLG9GQUFpREosS0FBSyxDQUFDTSxRQUF2RCxTQUFzRUYsU0FKM0U7QUFBQTtBQUFBO0FBQUEsd0NBS0tKLEtBQUssQ0FBQ08sTUFBTixLQUFpQkgsU0FMdEI7O0FBQUEsbUJBS0s7QUFBQTs7QUFBQSx3QkFHWSxNQUFNO0FBQUE7O0FBQ2Isa0NBQUFKLEtBQUssQ0FBQ1EsYUFBTixtRkFBQVIsS0FBSyxFQUFpQlMsS0FBakIsQ0FBTDtBQUNELFNBTEo7O0FBQUE7QUFBQSxzQkFFZSwyQkFBMEJYLGNBQWMsQ0FBQ0UsS0FBSyxDQUFDTyxNQUFQLENBQWUsRUFGdEU7QUFBQSx1QkFNVVAsS0FBSyxDQUFDVSxXQU5oQjtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUFBO0FBQUE7QUFBQSxhQVFHTixTQWJSO0FBQUE7QUFBQTtBQUFBOztBQUFBLGtEQUNrQkosS0FBSyxDQUFDVyxTQUR4QiwrREFDcUMsaUJBRHJDO0FBQUE7QUFBQTtBQUFBO0FBZ0JEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWFya2Rvd25WaWV3LCBQcm9wcyBhcyBNYXJrZG93blZpZXdQcm9wcyB9IGZyb20gXCIuL01hcmtkb3duVmlld1wiXG5pbXBvcnQgeyBTbmlwcGV0VmlldywgUHJvcHMgYXMgU25pcHBldFZpZXdQcm9wcyB9IGZyb20gXCIuL1NuaXBwZXRWaWV3XCJcbmltcG9ydCB7IFJlYWN0VmlldywgUHJvcHMgYXMgUmVhY3RWaWV3UHJvcHMgfSBmcm9tIFwiLi9SZWFjdFZpZXdcIlxuXG5leHBvcnQgY29uc3QgREFUQVRJUF9BQ1RJT05TID0gT2JqZWN0LmZyZWV6ZSh7XG4gIFBJTjogXCJQSU5cIixcbiAgQ0xPU0U6IFwiQ0xPU0VcIixcbn0pXG5cbmNvbnN0IEljb25zRm9yQWN0aW9uID0ge1xuICBbREFUQVRJUF9BQ1RJT05TLlBJTl06IFwicGluXCIsXG4gIFtEQVRBVElQX0FDVElPTlMuQ0xPU0VdOiBcInhcIixcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQcm9wcyB7XG4gIGNvbXBvbmVudD86IFJlYWN0Vmlld1Byb3BzXG4gIG1hcmtkb3duPzogTWFya2Rvd25WaWV3UHJvcHNcbiAgc25pcHBldD86IFNuaXBwZXRWaWV3UHJvcHNcbiAgYWN0aW9uPzogc3RyaW5nXG4gIGFjdGlvblRpdGxlPzogc3RyaW5nXG4gIGNsYXNzTmFtZT86IHN0cmluZ1xuICBvbkFjdGlvbkNsaWNrPzogKGV2ZW50OiBhbnkpID0+IHZvaWRcbiAgb25Nb3VzZURvd24/OiAoZXZlbnQ6IGFueSkgPT4gdm9pZFxuICBvbkNsaWNrQ2FwdHVyZT86IChldmVudDogYW55KSA9PiB2b2lkXG59XG5cbi8qKiBBIGNvbXBvbmVudCBmb3IgYSBkZWNvcmF0aW9uIHBhbmUgKi9cbmV4cG9ydCBmdW5jdGlvbiBWaWV3Q29udGFpbmVyKHByb3BzOiBQcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtwcm9wcy5jbGFzc05hbWUgPz8gXCJkYXRhdGlwLWVsZW1lbnRcIn0gey4uLnByb3BzLm9uTW91c2VEb3dufSB7Li4ucHJvcHMub25DbGlja0NhcHR1cmV9PlxuICAgICAge3Byb3BzLmNvbXBvbmVudCAhPT0gdW5kZWZpbmVkID8gPFJlYWN0VmlldyB7Li4ucHJvcHMuY29tcG9uZW50fSAvPiA6IHVuZGVmaW5lZH1cbiAgICAgIHtwcm9wcy5zbmlwcGV0ICE9PSB1bmRlZmluZWQgPyA8U25pcHBldFZpZXcgey4uLnByb3BzLnNuaXBwZXR9IC8+IDogdW5kZWZpbmVkfVxuICAgICAge3Byb3BzLm1hcmtkb3duICE9PSB1bmRlZmluZWQgPyA8TWFya2Rvd25WaWV3IHsuLi5wcm9wcy5tYXJrZG93bn0gLz4gOiB1bmRlZmluZWR9XG4gICAgICB7cHJvcHMuYWN0aW9uICE9PSB1bmRlZmluZWQgPyAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzc05hbWU9e2BkYXRhdGlwLXBpbi1idXR0b24gaWNvbi0ke0ljb25zRm9yQWN0aW9uW3Byb3BzLmFjdGlvbl19YH1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICBwcm9wcy5vbkFjdGlvbkNsaWNrPy4oZXZlbnQpXG4gICAgICAgICAgfX1cbiAgICAgICAgICB0aXRsZT17cHJvcHMuYWN0aW9uVGl0bGV9XG4gICAgICAgIC8+XG4gICAgICApIDogdW5kZWZpbmVkfVxuICAgIDwvZGl2PlxuICApXG59XG4iXX0=