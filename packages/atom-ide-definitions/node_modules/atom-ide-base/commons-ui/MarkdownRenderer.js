"use strict";
// Use built-in markdown renderer when the markdown service is not available
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.getMarkdownRenderer = void 0;
let render = undefined;
async function getMarkdownRenderer() {
    if (!render) {
        //@ts-ignore
        render = (await Promise.resolve().then(() => __importStar(require("atom-ide-markdown-service/modules/renderer")))).render;
    }
    return render;
}
exports.getMarkdownRenderer = getMarkdownRenderer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiTWFya2Rvd25SZW5kZXJlci5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uL3NyYy1jb21tb25zLXVpL01hcmtkb3duUmVuZGVyZXIudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLDRFQUE0RTs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUk1RSxJQUFJLE1BQU0sR0FBMEMsU0FBUyxDQUFBO0FBRXRELEtBQUssVUFBVSxtQkFBbUI7SUFDdkMsSUFBSSxDQUFDLE1BQU0sRUFBRTtRQUNYLFlBQVk7UUFDWixNQUFNLEdBQUcsQ0FBQyx3REFBYSw0Q0FBNEMsR0FBQyxDQUFDLENBQUMsTUFBTSxDQUFBO0tBQzdFO0lBQ0QsT0FBTyxNQUFNLENBQUE7QUFDZixDQUFDO0FBTkQsa0RBTUMiLCJzb3VyY2VzQ29udGVudCI6WyIvLyBVc2UgYnVpbHQtaW4gbWFya2Rvd24gcmVuZGVyZXIgd2hlbiB0aGUgbWFya2Rvd24gc2VydmljZSBpcyBub3QgYXZhaWxhYmxlXHJcblxyXG5pbXBvcnQgeyBNYXJrZG93blNlcnZpY2UgfSBmcm9tIFwiLi4vdHlwZXMtcGFja2FnZXMvbWFpblwiXHJcblxyXG5sZXQgcmVuZGVyOiBNYXJrZG93blNlcnZpY2VbXCJyZW5kZXJcIl0gfCB1bmRlZmluZWQgPSB1bmRlZmluZWRcclxuXHJcbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBnZXRNYXJrZG93blJlbmRlcmVyKCkge1xyXG4gIGlmICghcmVuZGVyKSB7XHJcbiAgICAvL0B0cy1pZ25vcmVcclxuICAgIHJlbmRlciA9IChhd2FpdCBpbXBvcnQoXCJhdG9tLWlkZS1tYXJrZG93bi1zZXJ2aWNlL21vZHVsZXMvcmVuZGVyZXJcIikpLnJlbmRlclxyXG4gIH1cclxuICByZXR1cm4gcmVuZGVyXHJcbn1cclxuIl19