/**
 * This class is used to read the styles informations (e.g. color and background-color) from the DOM to use when
 * rendering canvas. This is used in Minimap and Terminal It attaches a dummyNode to the targetNode, renders them, and
 * finds the computed style back.
 */
export declare class StyleReader {
    /** The cache object */
    private domStylesCache;
    private dummyNode?;
    /** Used to check if the dummyNode is on the current targetNode */
    private targetNode?;
    /** Set to true once tokenized */
    /**
     * Returns the computed values for the given property and scope in the DOM.
     *
     * This function insert a dummy element in the DOM to compute its style, return the specified property, and clear the
     * content of the dummy element.
     *
     * @param scopes A list of classes reprensenting the scope to build
     * @param property The name of the style property to compute
     * @param targetNode
     * @param getFromCache Whether to cache the computed value or not
     * @returns The computed property's value used in CanvasDrawer
     */
    retrieveStyleFromDom(scopes: string[], property: string, targetNode: HTMLElement, getFromCache?: boolean): string;
    /**
     * Creates a DOM node container for all the operations that need to read styles properties from DOM.
     *
     * @param targetNode
     */
    private ensureDummyNodeExistence;
    /** Invalidates the cache by emptying the cache object. used in MinimapElement */
    invalidateDOMStylesCache(): void;
}
