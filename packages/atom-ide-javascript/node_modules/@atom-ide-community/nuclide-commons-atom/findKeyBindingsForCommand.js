"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = findKeyBindingsForCommand;

var _humanizeKeystroke = _interopRequireDefault(require("@atom-ide-community/nuclide-commons/humanizeKeystroke"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */

/**
 * Determine what the applicable shortcut for a given command is within this component's context.
 * For example, this will return different keybindings on windows vs linux.
 */
function findKeyBindingsForCommand(command, target = atom.views.getView(atom.workspace)) {
  const matchingKeyBindings = atom.keymaps.findKeyBindings({
    command,
    target
  });
  const keystroke = matchingKeyBindings.length && matchingKeyBindings[0].keystrokes || '';
  return (0, _humanizeKeystroke.default)(keystroke, process.platform);
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLWF0b20vZmluZEtleUJpbmRpbmdzRm9yQ29tbWFuZC5qcyJdLCJuYW1lcyI6WyJmaW5kS2V5QmluZGluZ3NGb3JDb21tYW5kIiwiY29tbWFuZCIsInRhcmdldCIsImF0b20iLCJ2aWV3cyIsImdldFZpZXciLCJ3b3Jrc3BhY2UiLCJtYXRjaGluZ0tleUJpbmRpbmdzIiwia2V5bWFwcyIsImZpbmRLZXlCaW5kaW5ncyIsImtleXN0cm9rZSIsImxlbmd0aCIsImtleXN0cm9rZXMiLCJwcm9jZXNzIiwicGxhdGZvcm0iXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFZQTs7OztBQVpBOzs7Ozs7Ozs7Ozs7QUFjQTs7OztBQUllLFNBQVNBLHlCQUFULENBQ2JDLE9BRGEsRUFFYkMsTUFBb0IsR0FBR0MsSUFBSSxDQUFDQyxLQUFMLENBQVdDLE9BQVgsQ0FBbUJGLElBQUksQ0FBQ0csU0FBeEIsQ0FGVixFQUdMO0FBQ1IsUUFBTUMsbUJBQW1CLEdBQUdKLElBQUksQ0FBQ0ssT0FBTCxDQUFhQyxlQUFiLENBQTZCO0FBQUNSLElBQUFBLE9BQUQ7QUFBVUMsSUFBQUE7QUFBVixHQUE3QixDQUE1QjtBQUNBLFFBQU1RLFNBQVMsR0FDWkgsbUJBQW1CLENBQUNJLE1BQXBCLElBQThCSixtQkFBbUIsQ0FBQyxDQUFELENBQW5CLENBQXVCSyxVQUF0RCxJQUFxRSxFQUR2RTtBQUVBLFNBQU8sZ0NBQWtCRixTQUFsQixFQUE2QkcsT0FBTyxDQUFDQyxRQUFyQyxDQUFQO0FBQ0QiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXHJcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcclxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXHJcbiAqXHJcbiAqIEBmbG93IHN0cmljdFxyXG4gKiBAZm9ybWF0XHJcbiAqL1xyXG5cclxuaW1wb3J0IGh1bWFuaXplS2V5c3Ryb2tlIGZyb20gJ0BhdG9tLWlkZS1jb21tdW5pdHkvbnVjbGlkZS1jb21tb25zL2h1bWFuaXplS2V5c3Ryb2tlJztcclxuXHJcbi8qKlxyXG4gKiBEZXRlcm1pbmUgd2hhdCB0aGUgYXBwbGljYWJsZSBzaG9ydGN1dCBmb3IgYSBnaXZlbiBjb21tYW5kIGlzIHdpdGhpbiB0aGlzIGNvbXBvbmVudCdzIGNvbnRleHQuXHJcbiAqIEZvciBleGFtcGxlLCB0aGlzIHdpbGwgcmV0dXJuIGRpZmZlcmVudCBrZXliaW5kaW5ncyBvbiB3aW5kb3dzIHZzIGxpbnV4LlxyXG4gKi9cclxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZmluZEtleUJpbmRpbmdzRm9yQ29tbWFuZChcclxuICBjb21tYW5kOiBzdHJpbmcsXHJcbiAgdGFyZ2V0PzogSFRNTEVsZW1lbnQgPSBhdG9tLnZpZXdzLmdldFZpZXcoYXRvbS53b3Jrc3BhY2UpLFxyXG4pOiBzdHJpbmcge1xyXG4gIGNvbnN0IG1hdGNoaW5nS2V5QmluZGluZ3MgPSBhdG9tLmtleW1hcHMuZmluZEtleUJpbmRpbmdzKHtjb21tYW5kLCB0YXJnZXR9KTtcclxuICBjb25zdCBrZXlzdHJva2UgPVxyXG4gICAgKG1hdGNoaW5nS2V5QmluZGluZ3MubGVuZ3RoICYmIG1hdGNoaW5nS2V5QmluZGluZ3NbMF0ua2V5c3Ryb2tlcykgfHwgJyc7XHJcbiAgcmV0dXJuIGh1bWFuaXplS2V5c3Ryb2tlKGtleXN0cm9rZSwgcHJvY2Vzcy5wbGF0Zm9ybSk7XHJcbn1cclxuIl19