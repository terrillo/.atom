"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _SettingsControl = _interopRequireDefault(require("./SettingsControl"));

var React = _interopRequireWildcard(require("react"));

var _analytics = require("@atom-ide-community/nuclide-commons/analytics");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
class BoundSettingsControl extends React.Component {
  constructor(props) {
    super(props);
    this._observeConfigDisposable = void 0;

    this._onChange = value => {
      (0, _analytics.track)('bound-settings-control-change', {
        keyPath: this.props.keyPath,
        value
      });

      if (this.props.onChangeCallback != null) {
        this.props.onChangeCallback();
      }

      atom.config.set(this.props.keyPath, value);
    };

    this.state = {
      value: atom.config.get(props.keyPath)
    };
  }

  _updateSubscription() {
    if (this._observeConfigDisposable != null) {
      this._observeConfigDisposable.dispose();
    }

    this._observeConfigDisposable = atom.config.onDidChange(this.props.keyPath, ({
      newValue
    }) => {
      this.setState({
        value: newValue
      });
    });
  }

  componentDidMount() {
    this._updateSubscription();
  }

  componentDidUpdate(prevProps) {
    if (prevProps.keyPath !== this.props.keyPath) {
      this.setState({
        value: atom.config.get(this.props.keyPath)
      });

      this._updateSubscription();
    }
  }

  componentWillUnmount() {
    if (this._observeConfigDisposable != null) {
      this._observeConfigDisposable.dispose();
    }
  }

  render() {
    const schema = atom.config.getSchema(this.props.keyPath);
    return /*#__PURE__*/React.createElement(_SettingsControl.default, {
      keyPath: this.props.keyPath,
      title: schema.title,
      value: this.state.value,
      onChange: this._onChange,
      schema: schema,
      hideDetails: this.props.hideDetails
    });
  }

}

exports.default = BoundSettingsControl;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL0JvdW5kU2V0dGluZ3NDb250cm9sLmpzIl0sIm5hbWVzIjpbIkJvdW5kU2V0dGluZ3NDb250cm9sIiwiUmVhY3QiLCJDb21wb25lbnQiLCJjb25zdHJ1Y3RvciIsInByb3BzIiwiX29ic2VydmVDb25maWdEaXNwb3NhYmxlIiwiX29uQ2hhbmdlIiwidmFsdWUiLCJrZXlQYXRoIiwib25DaGFuZ2VDYWxsYmFjayIsImF0b20iLCJjb25maWciLCJzZXQiLCJzdGF0ZSIsImdldCIsIl91cGRhdGVTdWJzY3JpcHRpb24iLCJkaXNwb3NlIiwib25EaWRDaGFuZ2UiLCJuZXdWYWx1ZSIsInNldFN0YXRlIiwiY29tcG9uZW50RGlkTW91bnQiLCJjb21wb25lbnREaWRVcGRhdGUiLCJwcmV2UHJvcHMiLCJjb21wb25lbnRXaWxsVW5tb3VudCIsInJlbmRlciIsInNjaGVtYSIsImdldFNjaGVtYSIsInRpdGxlIiwiaGlkZURldGFpbHMiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFZQTs7QUFDQTs7QUFDQTs7Ozs7Ozs7QUFkQTs7Ozs7Ozs7Ozs7QUEwQmUsTUFBTUEsb0JBQU4sU0FBbUNDLEtBQUssQ0FBQ0MsU0FBekMsQ0FHYjtBQUdBQyxFQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBZTtBQUN4QixVQUFNQSxLQUFOO0FBRHdCLFNBRjFCQyx3QkFFMEI7O0FBQUEsU0FrRDFCQyxTQWxEMEIsR0FrRGJDLEtBQUQsSUFBc0I7QUFDaEMsNEJBQU0sK0JBQU4sRUFBdUM7QUFDckNDLFFBQUFBLE9BQU8sRUFBRSxLQUFLSixLQUFMLENBQVdJLE9BRGlCO0FBRXJDRCxRQUFBQTtBQUZxQyxPQUF2Qzs7QUFJQSxVQUFJLEtBQUtILEtBQUwsQ0FBV0ssZ0JBQVgsSUFBK0IsSUFBbkMsRUFBeUM7QUFDdkMsYUFBS0wsS0FBTCxDQUFXSyxnQkFBWDtBQUNEOztBQUNEQyxNQUFBQSxJQUFJLENBQUNDLE1BQUwsQ0FBWUMsR0FBWixDQUFnQixLQUFLUixLQUFMLENBQVdJLE9BQTNCLEVBQW9DRCxLQUFwQztBQUNELEtBM0R5Qjs7QUFFeEIsU0FBS00sS0FBTCxHQUFhO0FBQ1hOLE1BQUFBLEtBQUssRUFBRUcsSUFBSSxDQUFDQyxNQUFMLENBQVlHLEdBQVosQ0FBZ0JWLEtBQUssQ0FBQ0ksT0FBdEI7QUFESSxLQUFiO0FBR0Q7O0FBRURPLEVBQUFBLG1CQUFtQixHQUFTO0FBQzFCLFFBQUksS0FBS1Ysd0JBQUwsSUFBaUMsSUFBckMsRUFBMkM7QUFDekMsV0FBS0Esd0JBQUwsQ0FBOEJXLE9BQTlCO0FBQ0Q7O0FBQ0QsU0FBS1gsd0JBQUwsR0FBZ0NLLElBQUksQ0FBQ0MsTUFBTCxDQUFZTSxXQUFaLENBQzlCLEtBQUtiLEtBQUwsQ0FBV0ksT0FEbUIsRUFFOUIsQ0FBQztBQUFDVSxNQUFBQTtBQUFELEtBQUQsS0FBZ0I7QUFDZCxXQUFLQyxRQUFMLENBQWM7QUFBQ1osUUFBQUEsS0FBSyxFQUFFVztBQUFSLE9BQWQ7QUFDRCxLQUo2QixDQUFoQztBQU1EOztBQUVERSxFQUFBQSxpQkFBaUIsR0FBUztBQUN4QixTQUFLTCxtQkFBTDtBQUNEOztBQUVETSxFQUFBQSxrQkFBa0IsQ0FBQ0MsU0FBRCxFQUF5QjtBQUN6QyxRQUFJQSxTQUFTLENBQUNkLE9BQVYsS0FBc0IsS0FBS0osS0FBTCxDQUFXSSxPQUFyQyxFQUE4QztBQUM1QyxXQUFLVyxRQUFMLENBQWM7QUFBQ1osUUFBQUEsS0FBSyxFQUFFRyxJQUFJLENBQUNDLE1BQUwsQ0FBWUcsR0FBWixDQUFnQixLQUFLVixLQUFMLENBQVdJLE9BQTNCO0FBQVIsT0FBZDs7QUFDQSxXQUFLTyxtQkFBTDtBQUNEO0FBQ0Y7O0FBRURRLEVBQUFBLG9CQUFvQixHQUFTO0FBQzNCLFFBQUksS0FBS2xCLHdCQUFMLElBQWlDLElBQXJDLEVBQTJDO0FBQ3pDLFdBQUtBLHdCQUFMLENBQThCVyxPQUE5QjtBQUNEO0FBQ0Y7O0FBRURRLEVBQUFBLE1BQU0sR0FBdUI7QUFDM0IsVUFBTUMsTUFBTSxHQUFHZixJQUFJLENBQUNDLE1BQUwsQ0FBWWUsU0FBWixDQUFzQixLQUFLdEIsS0FBTCxDQUFXSSxPQUFqQyxDQUFmO0FBQ0Esd0JBQ0Usb0JBQUMsd0JBQUQ7QUFDRSxNQUFBLE9BQU8sRUFBRSxLQUFLSixLQUFMLENBQVdJLE9BRHRCO0FBRUUsTUFBQSxLQUFLLEVBQUVpQixNQUFNLENBQUNFLEtBRmhCO0FBR0UsTUFBQSxLQUFLLEVBQUUsS0FBS2QsS0FBTCxDQUFXTixLQUhwQjtBQUlFLE1BQUEsUUFBUSxFQUFFLEtBQUtELFNBSmpCO0FBS0UsTUFBQSxNQUFNLEVBQUVtQixNQUxWO0FBTUUsTUFBQSxXQUFXLEVBQUUsS0FBS3JCLEtBQUwsQ0FBV3dCO0FBTjFCLE1BREY7QUFVRDs7QUFuREQiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXHJcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcclxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXHJcbiAqXHJcbiAqIEBmbG93XHJcbiAqIEBmb3JtYXRcclxuICovXHJcblxyXG5pbXBvcnQgU2V0dGluZ3NDb250cm9sIGZyb20gJy4vU2V0dGluZ3NDb250cm9sJztcclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQge3RyYWNrfSBmcm9tICdAYXRvbS1pZGUtY29tbXVuaXR5L251Y2xpZGUtY29tbW9ucy9hbmFseXRpY3MnO1xyXG5cclxudHlwZSBQcm9wcyA9IHt8XHJcbiAga2V5UGF0aDogc3RyaW5nLFxyXG4gIGhpZGVEZXRhaWxzPzogYm9vbGVhbixcclxuICBvbkNoYW5nZUNhbGxiYWNrPzogKCkgPT4gdm9pZCxcclxufH07XHJcblxyXG50eXBlIFN0YXRlID0ge3xcclxuICB2YWx1ZTogYW55LFxyXG58fTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJvdW5kU2V0dGluZ3NDb250cm9sIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFxyXG4gIFByb3BzLFxyXG4gIFN0YXRlLFxyXG4+IHtcclxuICBfb2JzZXJ2ZUNvbmZpZ0Rpc3Bvc2FibGU6ID9JRGlzcG9zYWJsZTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJvcHM6IFByb3BzKSB7XHJcbiAgICBzdXBlcihwcm9wcyk7XHJcbiAgICB0aGlzLnN0YXRlID0ge1xyXG4gICAgICB2YWx1ZTogYXRvbS5jb25maWcuZ2V0KHByb3BzLmtleVBhdGgpLFxyXG4gICAgfTtcclxuICB9XHJcblxyXG4gIF91cGRhdGVTdWJzY3JpcHRpb24oKTogdm9pZCB7XHJcbiAgICBpZiAodGhpcy5fb2JzZXJ2ZUNvbmZpZ0Rpc3Bvc2FibGUgIT0gbnVsbCkge1xyXG4gICAgICB0aGlzLl9vYnNlcnZlQ29uZmlnRGlzcG9zYWJsZS5kaXNwb3NlKCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLl9vYnNlcnZlQ29uZmlnRGlzcG9zYWJsZSA9IGF0b20uY29uZmlnLm9uRGlkQ2hhbmdlKFxyXG4gICAgICB0aGlzLnByb3BzLmtleVBhdGgsXHJcbiAgICAgICh7bmV3VmFsdWV9KSA9PiB7XHJcbiAgICAgICAgdGhpcy5zZXRTdGF0ZSh7dmFsdWU6IG5ld1ZhbHVlfSk7XHJcbiAgICAgIH0sXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgY29tcG9uZW50RGlkTW91bnQoKTogdm9pZCB7XHJcbiAgICB0aGlzLl91cGRhdGVTdWJzY3JpcHRpb24oKTtcclxuICB9XHJcblxyXG4gIGNvbXBvbmVudERpZFVwZGF0ZShwcmV2UHJvcHM6IFByb3BzKTogdm9pZCB7XHJcbiAgICBpZiAocHJldlByb3BzLmtleVBhdGggIT09IHRoaXMucHJvcHMua2V5UGF0aCkge1xyXG4gICAgICB0aGlzLnNldFN0YXRlKHt2YWx1ZTogYXRvbS5jb25maWcuZ2V0KHRoaXMucHJvcHMua2V5UGF0aCl9KTtcclxuICAgICAgdGhpcy5fdXBkYXRlU3Vic2NyaXB0aW9uKCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBjb21wb25lbnRXaWxsVW5tb3VudCgpOiB2b2lkIHtcclxuICAgIGlmICh0aGlzLl9vYnNlcnZlQ29uZmlnRGlzcG9zYWJsZSAhPSBudWxsKSB7XHJcbiAgICAgIHRoaXMuX29ic2VydmVDb25maWdEaXNwb3NhYmxlLmRpc3Bvc2UoKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHJlbmRlcigpOiBSZWFjdC5FbGVtZW50PGFueT4ge1xyXG4gICAgY29uc3Qgc2NoZW1hID0gYXRvbS5jb25maWcuZ2V0U2NoZW1hKHRoaXMucHJvcHMua2V5UGF0aCk7XHJcbiAgICByZXR1cm4gKFxyXG4gICAgICA8U2V0dGluZ3NDb250cm9sXHJcbiAgICAgICAga2V5UGF0aD17dGhpcy5wcm9wcy5rZXlQYXRofVxyXG4gICAgICAgIHRpdGxlPXtzY2hlbWEudGl0bGV9XHJcbiAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUudmFsdWV9XHJcbiAgICAgICAgb25DaGFuZ2U9e3RoaXMuX29uQ2hhbmdlfVxyXG4gICAgICAgIHNjaGVtYT17c2NoZW1hfVxyXG4gICAgICAgIGhpZGVEZXRhaWxzPXt0aGlzLnByb3BzLmhpZGVEZXRhaWxzfVxyXG4gICAgICAvPlxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIF9vbkNoYW5nZSA9ICh2YWx1ZTogYW55KTogdm9pZCA9PiB7XHJcbiAgICB0cmFjaygnYm91bmQtc2V0dGluZ3MtY29udHJvbC1jaGFuZ2UnLCB7XHJcbiAgICAgIGtleVBhdGg6IHRoaXMucHJvcHMua2V5UGF0aCxcclxuICAgICAgdmFsdWUsXHJcbiAgICB9KTtcclxuICAgIGlmICh0aGlzLnByb3BzLm9uQ2hhbmdlQ2FsbGJhY2sgIT0gbnVsbCkge1xyXG4gICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlQ2FsbGJhY2soKTtcclxuICAgIH1cclxuICAgIGF0b20uY29uZmlnLnNldCh0aGlzLnByb3BzLmtleVBhdGgsIHZhbHVlKTtcclxuICB9O1xyXG59XHJcbiJdfQ==