"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DropdownExamples = void 0;

var React = _interopRequireWildcard(require("react"));

var _Dropdown = require("./Dropdown");

var _SplitButtonDropdown = require("./SplitButtonDropdown");

var _ModalMultiSelect = require("./ModalMultiSelect");

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */

/* global alert */
const DropdownExample = (() => {
  const options = [{
    value: 1,
    label: 'One'
  }, {
    value: 2,
    label: 'Two'
  }, {
    value: 3,
    label: 'Three'
  }, {
    value: 4,
    label: 'Four'
  }];
  return () => /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(_Dropdown.Dropdown, {
    options: options,
    value: 2
  }));
})();

const SplitButtonDropdownExample = (() => {
  const options = [{
    value: 1,
    label: 'Build',
    icon: 'tools'
  }, {
    value: 2,
    label: 'Run',
    icon: 'triangle-right',
    selectedLabel: 'Run It!'
  }, {
    value: 3,
    label: 'Rocket',
    icon: 'rocket'
  }, {
    type: 'separator'
  }, {
    value: 4,
    label: 'Squirrel',
    icon: 'squirrel'
  }, {
    value: 5,
    label: 'Beaker',
    icon: 'telescope',
    disabled: true
  }];
  return () => /*#__PURE__*/React.createElement("div", null, /*#__PURE__*/React.createElement(_SplitButtonDropdown.SplitButtonDropdown, {
    options: options,
    value: 2,
    onConfirm: // eslint-disable-next-line no-alert
    x => alert(`You selected ${x}!`)
  }));
})();

class ModalMultiSelectExample extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      value: [2]
    };
  }

  render() {
    const options = [{
      value: 1,
      label: 'One'
    }, {
      value: 2,
      label: 'Two'
    }, {
      value: 3,
      label: 'Three'
    }, {
      value: 4,
      label: 'Four'
    }];
    return /*#__PURE__*/React.createElement(_ModalMultiSelect.ModalMultiSelect, {
      options: options,
      onChange: value => {
        this.setState({
          value
        });
      },
      value: this.state.value
    });
  }

}

const DropdownExamples = {
  sectionName: 'Dropdowns',
  description: 'For selecting things.',
  examples: [{
    title: 'Dropdown',
    component: DropdownExample
  }, {
    title: 'Split Button Dropdown',
    component: SplitButtonDropdownExample
  }, {
    title: 'Modal Multi-Select',
    component: ModalMultiSelectExample
  }]
};
exports.DropdownExamples = DropdownExamples;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL0Ryb3Bkb3duLmV4YW1wbGUuanMiXSwibmFtZXMiOlsiRHJvcGRvd25FeGFtcGxlIiwib3B0aW9ucyIsInZhbHVlIiwibGFiZWwiLCJTcGxpdEJ1dHRvbkRyb3Bkb3duRXhhbXBsZSIsImljb24iLCJzZWxlY3RlZExhYmVsIiwidHlwZSIsImRpc2FibGVkIiwieCIsImFsZXJ0IiwiTW9kYWxNdWx0aVNlbGVjdEV4YW1wbGUiLCJSZWFjdCIsIkNvbXBvbmVudCIsImNvbnN0cnVjdG9yIiwicHJvcHMiLCJzdGF0ZSIsInJlbmRlciIsInNldFN0YXRlIiwiRHJvcGRvd25FeGFtcGxlcyIsInNlY3Rpb25OYW1lIiwiZGVzY3JpcHRpb24iLCJleGFtcGxlcyIsInRpdGxlIiwiY29tcG9uZW50Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBY0E7O0FBQ0E7O0FBQ0E7O0FBQ0E7Ozs7OztBQWpCQTs7Ozs7Ozs7Ozs7O0FBWUE7QUFPQSxNQUFNQSxlQUFlLEdBQUcsQ0FBQyxNQUFNO0FBQzdCLFFBQU1DLE9BQU8sR0FBRyxDQUNkO0FBQUNDLElBQUFBLEtBQUssRUFBRSxDQUFSO0FBQVdDLElBQUFBLEtBQUssRUFBRTtBQUFsQixHQURjLEVBRWQ7QUFBQ0QsSUFBQUEsS0FBSyxFQUFFLENBQVI7QUFBV0MsSUFBQUEsS0FBSyxFQUFFO0FBQWxCLEdBRmMsRUFHZDtBQUFDRCxJQUFBQSxLQUFLLEVBQUUsQ0FBUjtBQUFXQyxJQUFBQSxLQUFLLEVBQUU7QUFBbEIsR0FIYyxFQUlkO0FBQUNELElBQUFBLEtBQUssRUFBRSxDQUFSO0FBQVdDLElBQUFBLEtBQUssRUFBRTtBQUFsQixHQUpjLENBQWhCO0FBTUEsU0FBTyxtQkFDTCw4Q0FDRSxvQkFBQyxrQkFBRDtBQUFVLElBQUEsT0FBTyxFQUFFRixPQUFuQjtBQUE0QixJQUFBLEtBQUssRUFBRTtBQUFuQyxJQURGLENBREY7QUFLRCxDQVp1QixHQUF4Qjs7QUFjQSxN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QUF6QiIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cclxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxyXG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cclxuICpcclxuICogQGZsb3dcclxuICogQGZvcm1hdFxyXG4gKi9cclxuXHJcbi8qIGdsb2JhbCBhbGVydCAqL1xyXG5cclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQge0Ryb3Bkb3dufSBmcm9tICcuL0Ryb3Bkb3duJztcclxuaW1wb3J0IHtTcGxpdEJ1dHRvbkRyb3Bkb3dufSBmcm9tICcuL1NwbGl0QnV0dG9uRHJvcGRvd24nO1xyXG5pbXBvcnQge01vZGFsTXVsdGlTZWxlY3R9IGZyb20gJy4vTW9kYWxNdWx0aVNlbGVjdCc7XHJcblxyXG5jb25zdCBEcm9wZG93bkV4YW1wbGUgPSAoKCkgPT4ge1xyXG4gIGNvbnN0IG9wdGlvbnMgPSBbXHJcbiAgICB7dmFsdWU6IDEsIGxhYmVsOiAnT25lJ30sXHJcbiAgICB7dmFsdWU6IDIsIGxhYmVsOiAnVHdvJ30sXHJcbiAgICB7dmFsdWU6IDMsIGxhYmVsOiAnVGhyZWUnfSxcclxuICAgIHt2YWx1ZTogNCwgbGFiZWw6ICdGb3VyJ30sXHJcbiAgXTtcclxuICByZXR1cm4gKCk6IFJlYWN0LkVsZW1lbnQ8YW55PiA9PiAoXHJcbiAgICA8ZGl2PlxyXG4gICAgICA8RHJvcGRvd24gb3B0aW9ucz17b3B0aW9uc30gdmFsdWU9ezJ9IC8+XHJcbiAgICA8L2Rpdj5cclxuICApO1xyXG59KSgpO1xyXG5cclxuY29uc3QgU3BsaXRCdXR0b25Ecm9wZG93bkV4YW1wbGUgPSAoKCkgPT4ge1xyXG4gIGNvbnN0IG9wdGlvbnMgPSBbXHJcbiAgICB7dmFsdWU6IDEsIGxhYmVsOiAnQnVpbGQnLCBpY29uOiAndG9vbHMnfSxcclxuICAgIHt2YWx1ZTogMiwgbGFiZWw6ICdSdW4nLCBpY29uOiAndHJpYW5nbGUtcmlnaHQnLCBzZWxlY3RlZExhYmVsOiAnUnVuIEl0ISd9LFxyXG4gICAge3ZhbHVlOiAzLCBsYWJlbDogJ1JvY2tldCcsIGljb246ICdyb2NrZXQnfSxcclxuICAgIHt0eXBlOiAnc2VwYXJhdG9yJ30sXHJcbiAgICB7dmFsdWU6IDQsIGxhYmVsOiAnU3F1aXJyZWwnLCBpY29uOiAnc3F1aXJyZWwnfSxcclxuICAgIHt2YWx1ZTogNSwgbGFiZWw6ICdCZWFrZXInLCBpY29uOiAndGVsZXNjb3BlJywgZGlzYWJsZWQ6IHRydWV9LFxyXG4gIF07XHJcbiAgcmV0dXJuICgpOiBSZWFjdC5FbGVtZW50PGFueT4gPT4gKFxyXG4gICAgPGRpdj5cclxuICAgICAgPFNwbGl0QnV0dG9uRHJvcGRvd25cclxuICAgICAgICBvcHRpb25zPXtvcHRpb25zfVxyXG4gICAgICAgIHZhbHVlPXsyfVxyXG4gICAgICAgIG9uQ29uZmlybT17XHJcbiAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tYWxlcnRcclxuICAgICAgICAgIHggPT4gYWxlcnQoYFlvdSBzZWxlY3RlZCAke3h9IWApXHJcbiAgICAgICAgfVxyXG4gICAgICAvPlxyXG4gICAgPC9kaXY+XHJcbiAgKTtcclxufSkoKTtcclxuXHJcbmNsYXNzIE1vZGFsTXVsdGlTZWxlY3RFeGFtcGxlIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFxyXG4gIHZvaWQsXHJcbiAge3ZhbHVlOiBBcnJheTxudW1iZXI+fSxcclxuPiB7XHJcbiAgY29uc3RydWN0b3IocHJvcHM6IHZvaWQpIHtcclxuICAgIHN1cGVyKHByb3BzKTtcclxuICAgIHRoaXMuc3RhdGUgPSB7dmFsdWU6IFsyXX07XHJcbiAgfVxyXG5cclxuICByZW5kZXIoKTogUmVhY3QuTm9kZSB7XHJcbiAgICBjb25zdCBvcHRpb25zID0gW1xyXG4gICAgICB7dmFsdWU6IDEsIGxhYmVsOiAnT25lJ30sXHJcbiAgICAgIHt2YWx1ZTogMiwgbGFiZWw6ICdUd28nfSxcclxuICAgICAge3ZhbHVlOiAzLCBsYWJlbDogJ1RocmVlJ30sXHJcbiAgICAgIHt2YWx1ZTogNCwgbGFiZWw6ICdGb3VyJ30sXHJcbiAgICBdO1xyXG4gICAgcmV0dXJuIChcclxuICAgICAgPE1vZGFsTXVsdGlTZWxlY3RcclxuICAgICAgICBvcHRpb25zPXtvcHRpb25zfVxyXG4gICAgICAgIG9uQ2hhbmdlPXt2YWx1ZSA9PiB7XHJcbiAgICAgICAgICB0aGlzLnNldFN0YXRlKHt2YWx1ZX0pO1xyXG4gICAgICAgIH19XHJcbiAgICAgICAgdmFsdWU9e3RoaXMuc3RhdGUudmFsdWV9XHJcbiAgICAgIC8+XHJcbiAgICApO1xyXG4gIH1cclxufVxyXG5cclxuZXhwb3J0IGNvbnN0IERyb3Bkb3duRXhhbXBsZXMgPSB7XHJcbiAgc2VjdGlvbk5hbWU6ICdEcm9wZG93bnMnLFxyXG4gIGRlc2NyaXB0aW9uOiAnRm9yIHNlbGVjdGluZyB0aGluZ3MuJyxcclxuICBleGFtcGxlczogW1xyXG4gICAge1xyXG4gICAgICB0aXRsZTogJ0Ryb3Bkb3duJyxcclxuICAgICAgY29tcG9uZW50OiBEcm9wZG93bkV4YW1wbGUsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0aXRsZTogJ1NwbGl0IEJ1dHRvbiBEcm9wZG93bicsXHJcbiAgICAgIGNvbXBvbmVudDogU3BsaXRCdXR0b25Ecm9wZG93bkV4YW1wbGUsXHJcbiAgICB9LFxyXG4gICAge1xyXG4gICAgICB0aXRsZTogJ01vZGFsIE11bHRpLVNlbGVjdCcsXHJcbiAgICAgIGNvbXBvbmVudDogTW9kYWxNdWx0aVNlbGVjdEV4YW1wbGUsXHJcbiAgICB9LFxyXG4gIF0sXHJcbn07XHJcbiJdfQ==