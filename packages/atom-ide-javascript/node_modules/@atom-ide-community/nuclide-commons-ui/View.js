"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.View = void 0;

var React = _interopRequireWildcard(require("react"));

var _reactDom = _interopRequireDefault(require("react-dom"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */

/**
 * A React component used for rendering an item associated with a view via Atom's view registry.
 * Because we're going through Atom's ViewRegistry (which returns DOM nodes), we need to render an
 * empty element and manually attach the view (DOM element) we get from Atom.
 */
class View extends React.Component {
  constructor(...args) {
    super(...args);
    this._renderedItem = void 0;
  }

  shouldComponentUpdate(nextProps) {
    return this.props.item !== nextProps.item;
  }

  componentDidMount() {
    this._update(this.props.item);
  }

  componentDidUpdate() {
    this._update(this.props.item);
  }

  _update(item) {
    if (item === this._renderedItem) {
      return;
    } // Remove the current children.


    const container = _reactDom.default.findDOMNode(this); // $FlowFixMe


    while (container.lastChild != null) {
      // $FlowFixMe
      container.removeChild(container.lastChild);
    }

    this._renderedItem = item;

    if (item == null) {
      return;
    }

    const el = atom.views.getView(item); // $FlowFixMe

    container.appendChild(el);
  }

  render() {
    return /*#__PURE__*/React.createElement("nuclide-react-mount-root", null);
  }

}

exports.View = View;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL1ZpZXcuanMiXSwibmFtZXMiOlsiVmlldyIsIlJlYWN0IiwiQ29tcG9uZW50IiwiX3JlbmRlcmVkSXRlbSIsInNob3VsZENvbXBvbmVudFVwZGF0ZSIsIm5leHRQcm9wcyIsInByb3BzIiwiaXRlbSIsImNvbXBvbmVudERpZE1vdW50IiwiX3VwZGF0ZSIsImNvbXBvbmVudERpZFVwZGF0ZSIsImNvbnRhaW5lciIsIlJlYWN0RE9NIiwiZmluZERPTU5vZGUiLCJsYXN0Q2hpbGQiLCJyZW1vdmVDaGlsZCIsImVsIiwiYXRvbSIsInZpZXdzIiwiZ2V0VmlldyIsImFwcGVuZENoaWxkIiwicmVuZGVyIl0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBWUE7O0FBQ0E7Ozs7Ozs7O0FBYkE7Ozs7Ozs7Ozs7OztBQW1CQTs7Ozs7QUFLTyxNQUFNQSxJQUFOLFNBQW1CQyxLQUFLLENBQUNDLFNBQXpCLENBQTBDO0FBQUE7QUFBQTtBQUFBLFNBQy9DQyxhQUQrQztBQUFBOztBQUcvQ0MsRUFBQUEscUJBQXFCLENBQUNDLFNBQUQsRUFBNEI7QUFDL0MsV0FBTyxLQUFLQyxLQUFMLENBQVdDLElBQVgsS0FBb0JGLFNBQVMsQ0FBQ0UsSUFBckM7QUFDRDs7QUFFREMsRUFBQUEsaUJBQWlCLEdBQVM7QUFDeEIsU0FBS0MsT0FBTCxDQUFhLEtBQUtILEtBQUwsQ0FBV0MsSUFBeEI7QUFDRDs7QUFFREcsRUFBQUEsa0JBQWtCLEdBQVM7QUFDekIsU0FBS0QsT0FBTCxDQUFhLEtBQUtILEtBQUwsQ0FBV0MsSUFBeEI7QUFDRDs7QUFFREUsRUFBQUEsT0FBTyxDQUFDRixJQUFELEVBQXNCO0FBQzNCLFFBQUlBLElBQUksS0FBSyxLQUFLSixhQUFsQixFQUFpQztBQUMvQjtBQUNELEtBSDBCLENBSzNCOzs7QUFDQSxVQUFNUSxTQUFTLEdBQUdDLGtCQUFTQyxXQUFULENBQXFCLElBQXJCLENBQWxCLENBTjJCLENBTzNCOzs7QUFDQSxXQUFPRixTQUFTLENBQUNHLFNBQVYsSUFBdUIsSUFBOUIsRUFBb0M7QUFDbEM7QUFDQUgsTUFBQUEsU0FBUyxDQUFDSSxXQUFWLENBQXNCSixTQUFTLENBQUNHLFNBQWhDO0FBQ0Q7O0FBRUQsU0FBS1gsYUFBTCxHQUFxQkksSUFBckI7O0FBQ0EsUUFBSUEsSUFBSSxJQUFJLElBQVosRUFBa0I7QUFDaEI7QUFDRDs7QUFDRCxVQUFNUyxFQUFFLEdBQUdDLElBQUksQ0FBQ0MsS0FBTCxDQUFXQyxPQUFYLENBQW1CWixJQUFuQixDQUFYLENBakIyQixDQWtCM0I7O0FBQ0FJLElBQUFBLFNBQVMsQ0FBQ1MsV0FBVixDQUFzQkosRUFBdEI7QUFDRDs7QUFFREssRUFBQUEsTUFBTSxHQUFlO0FBQ25CLHdCQUFPLHFEQUFQO0FBQ0Q7O0FBdkM4QyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiBDb3B5cmlnaHQgKGMpIDIwMTctcHJlc2VudCwgRmFjZWJvb2ssIEluYy5cclxuICogQWxsIHJpZ2h0cyByZXNlcnZlZC5cclxuICpcclxuICogVGhpcyBzb3VyY2UgY29kZSBpcyBsaWNlbnNlZCB1bmRlciB0aGUgQlNELXN0eWxlIGxpY2Vuc2UgZm91bmQgaW4gdGhlXHJcbiAqIExJQ0VOU0UgZmlsZSBpbiB0aGUgcm9vdCBkaXJlY3Rvcnkgb2YgdGhpcyBzb3VyY2UgdHJlZS4gQW4gYWRkaXRpb25hbCBncmFudFxyXG4gKiBvZiBwYXRlbnQgcmlnaHRzIGNhbiBiZSBmb3VuZCBpbiB0aGUgUEFURU5UUyBmaWxlIGluIHRoZSBzYW1lIGRpcmVjdG9yeS5cclxuICpcclxuICogQGZsb3dcclxuICogQGZvcm1hdFxyXG4gKi9cclxuXHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IFJlYWN0RE9NIGZyb20gJ3JlYWN0LWRvbSc7XHJcblxyXG50eXBlIFByb3BzID0ge1xyXG4gIGl0ZW06IE9iamVjdCxcclxufTtcclxuXHJcbi8qKlxyXG4gKiBBIFJlYWN0IGNvbXBvbmVudCB1c2VkIGZvciByZW5kZXJpbmcgYW4gaXRlbSBhc3NvY2lhdGVkIHdpdGggYSB2aWV3IHZpYSBBdG9tJ3MgdmlldyByZWdpc3RyeS5cclxuICogQmVjYXVzZSB3ZSdyZSBnb2luZyB0aHJvdWdoIEF0b20ncyBWaWV3UmVnaXN0cnkgKHdoaWNoIHJldHVybnMgRE9NIG5vZGVzKSwgd2UgbmVlZCB0byByZW5kZXIgYW5cclxuICogZW1wdHkgZWxlbWVudCBhbmQgbWFudWFsbHkgYXR0YWNoIHRoZSB2aWV3IChET00gZWxlbWVudCkgd2UgZ2V0IGZyb20gQXRvbS5cclxuICovXHJcbmV4cG9ydCBjbGFzcyBWaWV3IGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PFByb3BzPiB7XHJcbiAgX3JlbmRlcmVkSXRlbTogP09iamVjdDtcclxuXHJcbiAgc2hvdWxkQ29tcG9uZW50VXBkYXRlKG5leHRQcm9wczogUHJvcHMpOiBib29sZWFuIHtcclxuICAgIHJldHVybiB0aGlzLnByb3BzLml0ZW0gIT09IG5leHRQcm9wcy5pdGVtO1xyXG4gIH1cclxuXHJcbiAgY29tcG9uZW50RGlkTW91bnQoKTogdm9pZCB7XHJcbiAgICB0aGlzLl91cGRhdGUodGhpcy5wcm9wcy5pdGVtKTtcclxuICB9XHJcblxyXG4gIGNvbXBvbmVudERpZFVwZGF0ZSgpOiB2b2lkIHtcclxuICAgIHRoaXMuX3VwZGF0ZSh0aGlzLnByb3BzLml0ZW0pO1xyXG4gIH1cclxuXHJcbiAgX3VwZGF0ZShpdGVtOiA/T2JqZWN0KTogdm9pZCB7XHJcbiAgICBpZiAoaXRlbSA9PT0gdGhpcy5fcmVuZGVyZWRJdGVtKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICAvLyBSZW1vdmUgdGhlIGN1cnJlbnQgY2hpbGRyZW4uXHJcbiAgICBjb25zdCBjb250YWluZXIgPSBSZWFjdERPTS5maW5kRE9NTm9kZSh0aGlzKTtcclxuICAgIC8vICRGbG93Rml4TWVcclxuICAgIHdoaWxlIChjb250YWluZXIubGFzdENoaWxkICE9IG51bGwpIHtcclxuICAgICAgLy8gJEZsb3dGaXhNZVxyXG4gICAgICBjb250YWluZXIucmVtb3ZlQ2hpbGQoY29udGFpbmVyLmxhc3RDaGlsZCk7XHJcbiAgICB9XHJcblxyXG4gICAgdGhpcy5fcmVuZGVyZWRJdGVtID0gaXRlbTtcclxuICAgIGlmIChpdGVtID09IG51bGwpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG4gICAgY29uc3QgZWwgPSBhdG9tLnZpZXdzLmdldFZpZXcoaXRlbSk7XHJcbiAgICAvLyAkRmxvd0ZpeE1lXHJcbiAgICBjb250YWluZXIuYXBwZW5kQ2hpbGQoZWwpO1xyXG4gIH1cclxuXHJcbiAgcmVuZGVyKCk6IFJlYWN0Lk5vZGUge1xyXG4gICAgcmV0dXJuIDxudWNsaWRlLXJlYWN0LW1vdW50LXJvb3QgLz47XHJcbiAgfVxyXG59XHJcbiJdfQ==