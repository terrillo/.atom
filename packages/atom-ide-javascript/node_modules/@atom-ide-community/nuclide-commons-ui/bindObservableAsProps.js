"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.bindObservableAsProps = bindObservableAsProps;

var React = _interopRequireWildcard(require("react"));

var _getDisplayName = _interopRequireDefault(require("@atom-ide-community/nuclide-commons/getDisplayName"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */

/**
 * Injects any key/value pairs from the given Observable value into the component as named props.
 * e.g. `bindObservableAsProps(Observable.just({val: 42}), FooComponent)` will translate to
 * `<FooComponent val={42} />`.
 *
 * The resulting component re-renders on updates to the observable.
 * The wrapped component is guaranteed to render only if the observable has resolved;
 * otherwise, the wrapper component renders `null`.
 */
function bindObservableAsProps(stream, ComposedComponent) {
  var _class, _temp;

  // $FlowIssue The return type is guaranteed to be the same as the type of ComposedComponent.
  return _temp = _class = class extends React.Component {
    constructor(props) {
      super(props);
      this._subscription = void 0;
      this._resolved = void 0;
      this._subscription = null;
      this.state = {};
      this._resolved = false;
    }

    componentDidMount() {
      this._subscription = stream.subscribe(newState => {
        this._resolved = true;
        this.setState(newState);
      });
    }

    componentWillUnmount() {
      if (this._subscription != null) {
        this._subscription.unsubscribe();
      }
    }

    render() {
      if (!this._resolved) {
        return null;
      }

      const props = { ...this.props,
        ...this.state
      };
      return /*#__PURE__*/React.createElement(ComposedComponent, props);
    }

  }, _class.displayName = `bindObservableAsProps(${(0, _getDisplayName.default)(ComposedComponent)})`, _temp;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL2JpbmRPYnNlcnZhYmxlQXNQcm9wcy5qcyJdLCJuYW1lcyI6WyJiaW5kT2JzZXJ2YWJsZUFzUHJvcHMiLCJzdHJlYW0iLCJDb21wb3NlZENvbXBvbmVudCIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsIl9zdWJzY3JpcHRpb24iLCJfcmVzb2x2ZWQiLCJzdGF0ZSIsImNvbXBvbmVudERpZE1vdW50Iiwic3Vic2NyaWJlIiwibmV3U3RhdGUiLCJzZXRTdGF0ZSIsImNvbXBvbmVudFdpbGxVbm1vdW50IiwidW5zdWJzY3JpYmUiLCJyZW5kZXIiLCJkaXNwbGF5TmFtZSJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQWNBOztBQUNBOzs7Ozs7OztBQWZBOzs7Ozs7Ozs7Ozs7QUFpQkE7Ozs7Ozs7OztBQVNPLFNBQVNBLHFCQUFULENBQ0xDLE1BREssRUFFTEMsaUJBRkssRUFHRjtBQUFBOztBQUNIO0FBQ0EsMEJBQU8sY0FBY0MsS0FBSyxDQUFDQyxTQUFwQixDQUFxRTtBQVExRUMsSUFBQUEsV0FBVyxDQUFDQyxLQUFELEVBQVE7QUFDakIsWUFBTUEsS0FBTjtBQURpQixXQUhuQkMsYUFHbUI7QUFBQSxXQUZuQkMsU0FFbUI7QUFFakIsV0FBS0QsYUFBTCxHQUFxQixJQUFyQjtBQUNBLFdBQUtFLEtBQUwsR0FBYSxFQUFiO0FBQ0EsV0FBS0QsU0FBTCxHQUFpQixLQUFqQjtBQUNEOztBQUVERSxJQUFBQSxpQkFBaUIsR0FBUztBQUN4QixXQUFLSCxhQUFMLEdBQXFCTixNQUFNLENBQUNVLFNBQVAsQ0FBaUJDLFFBQVEsSUFBSTtBQUNoRCxhQUFLSixTQUFMLEdBQWlCLElBQWpCO0FBQ0EsYUFBS0ssUUFBTCxDQUFjRCxRQUFkO0FBQ0QsT0FIb0IsQ0FBckI7QUFJRDs7QUFFREUsSUFBQUEsb0JBQW9CLEdBQVM7QUFDM0IsVUFBSSxLQUFLUCxhQUFMLElBQXNCLElBQTFCLEVBQWdDO0FBQzlCLGFBQUtBLGFBQUwsQ0FBbUJRLFdBQW5CO0FBQ0Q7QUFDRjs7QUFFREMsSUFBQUEsTUFBTSxHQUFlO0FBQ25CLFVBQUksQ0FBQyxLQUFLUixTQUFWLEVBQXFCO0FBQ25CLGVBQU8sSUFBUDtBQUNEOztBQUNELFlBQU1GLEtBQUssR0FBRyxFQUNaLEdBQUcsS0FBS0EsS0FESTtBQUVaLFdBQUcsS0FBS0c7QUFGSSxPQUFkO0FBSUEsMEJBQU8sb0JBQUMsaUJBQUQsRUFBdUJILEtBQXZCLENBQVA7QUFDRDs7QUFyQ3lFLEdBQTVFLFNBQ1NXLFdBRFQsR0FDd0IseUJBQXdCLDZCQUM1Q2YsaUJBRDRDLENBRTVDLEdBSEo7QUF1Q0QiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXHJcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcclxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXHJcbiAqXHJcbiAqIEBmbG93XHJcbiAqIEBmb3JtYXRcclxuICovXHJcblxyXG5pbXBvcnQgdHlwZSB7T2JzZXJ2YWJsZX0gZnJvbSAncnhqcy1jb21wYXQvYnVuZGxlcy9yeGpzLWNvbXBhdC51bWQubWluLmpzJztcclxuXHJcbmltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcclxuaW1wb3J0IGdldERpc3BsYXlOYW1lIGZyb20gJ0BhdG9tLWlkZS1jb21tdW5pdHkvbnVjbGlkZS1jb21tb25zL2dldERpc3BsYXlOYW1lJztcclxuXHJcbi8qKlxyXG4gKiBJbmplY3RzIGFueSBrZXkvdmFsdWUgcGFpcnMgZnJvbSB0aGUgZ2l2ZW4gT2JzZXJ2YWJsZSB2YWx1ZSBpbnRvIHRoZSBjb21wb25lbnQgYXMgbmFtZWQgcHJvcHMuXHJcbiAqIGUuZy4gYGJpbmRPYnNlcnZhYmxlQXNQcm9wcyhPYnNlcnZhYmxlLmp1c3Qoe3ZhbDogNDJ9KSwgRm9vQ29tcG9uZW50KWAgd2lsbCB0cmFuc2xhdGUgdG9cclxuICogYDxGb29Db21wb25lbnQgdmFsPXs0Mn0gLz5gLlxyXG4gKlxyXG4gKiBUaGUgcmVzdWx0aW5nIGNvbXBvbmVudCByZS1yZW5kZXJzIG9uIHVwZGF0ZXMgdG8gdGhlIG9ic2VydmFibGUuXHJcbiAqIFRoZSB3cmFwcGVkIGNvbXBvbmVudCBpcyBndWFyYW50ZWVkIHRvIHJlbmRlciBvbmx5IGlmIHRoZSBvYnNlcnZhYmxlIGhhcyByZXNvbHZlZDtcclxuICogb3RoZXJ3aXNlLCB0aGUgd3JhcHBlciBjb21wb25lbnQgcmVuZGVycyBgbnVsbGAuXHJcbiAqL1xyXG5leHBvcnQgZnVuY3Rpb24gYmluZE9ic2VydmFibGVBc1Byb3BzPFQ6IFJlYWN0LkNvbXBvbmVudFR5cGU8YW55PiwgVTogVD4oXHJcbiAgc3RyZWFtOiBPYnNlcnZhYmxlPHsrW2tleTogc3RyaW5nXTogYW55fT4sXHJcbiAgQ29tcG9zZWRDb21wb25lbnQ6IFQsXHJcbik6IFUge1xyXG4gIC8vICRGbG93SXNzdWUgVGhlIHJldHVybiB0eXBlIGlzIGd1YXJhbnRlZWQgdG8gYmUgdGhlIHNhbWUgYXMgdGhlIHR5cGUgb2YgQ29tcG9zZWRDb21wb25lbnQuXHJcbiAgcmV0dXJuIGNsYXNzIGV4dGVuZHMgUmVhY3QuQ29tcG9uZW50PCRGbG93Rml4TWVQcm9wcywge1trZXk6IHN0cmluZ106IGFueX0+IHtcclxuICAgIHN0YXRpYyBkaXNwbGF5TmFtZSA9IGBiaW5kT2JzZXJ2YWJsZUFzUHJvcHMoJHtnZXREaXNwbGF5TmFtZShcclxuICAgICAgQ29tcG9zZWRDb21wb25lbnQsXHJcbiAgICApfSlgO1xyXG5cclxuICAgIF9zdWJzY3JpcHRpb246ID9yeGpzJElTdWJzY3JpcHRpb247XHJcbiAgICBfcmVzb2x2ZWQ6IGJvb2xlYW47XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcclxuICAgICAgc3VwZXIocHJvcHMpO1xyXG4gICAgICB0aGlzLl9zdWJzY3JpcHRpb24gPSBudWxsO1xyXG4gICAgICB0aGlzLnN0YXRlID0ge307XHJcbiAgICAgIHRoaXMuX3Jlc29sdmVkID0gZmFsc2U7XHJcbiAgICB9XHJcblxyXG4gICAgY29tcG9uZW50RGlkTW91bnQoKTogdm9pZCB7XHJcbiAgICAgIHRoaXMuX3N1YnNjcmlwdGlvbiA9IHN0cmVhbS5zdWJzY3JpYmUobmV3U3RhdGUgPT4ge1xyXG4gICAgICAgIHRoaXMuX3Jlc29sdmVkID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnNldFN0YXRlKG5ld1N0YXRlKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKTogdm9pZCB7XHJcbiAgICAgIGlmICh0aGlzLl9zdWJzY3JpcHRpb24gIT0gbnVsbCkge1xyXG4gICAgICAgIHRoaXMuX3N1YnNjcmlwdGlvbi51bnN1YnNjcmliZSgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmVuZGVyKCk6IFJlYWN0Lk5vZGUge1xyXG4gICAgICBpZiAoIXRoaXMuX3Jlc29sdmVkKSB7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgIH1cclxuICAgICAgY29uc3QgcHJvcHMgPSB7XHJcbiAgICAgICAgLi4udGhpcy5wcm9wcyxcclxuICAgICAgICAuLi50aGlzLnN0YXRlLFxyXG4gICAgICB9O1xyXG4gICAgICByZXR1cm4gPENvbXBvc2VkQ29tcG9uZW50IHsuLi5wcm9wc30gLz47XHJcbiAgICB9XHJcbiAgfTtcclxufVxyXG4iXX0=