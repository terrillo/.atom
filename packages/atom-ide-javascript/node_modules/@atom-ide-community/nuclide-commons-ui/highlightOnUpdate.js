"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.highlightOnUpdate = highlightOnUpdate;

var React = _interopRequireWildcard(require("react"));

var _shallowequal = _interopRequireDefault(require("shallowequal"));

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _getRequireWildcardCache() { if (typeof WeakMap !== "function") return null; var cache = new WeakMap(); _getRequireWildcardCache = function () { return cache; }; return cache; }

function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== "object" && typeof obj !== "function") { return { default: obj }; } var cache = _getRequireWildcardCache(); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */

/**
 * Wraps DecoratedComponent in a special `span` with a configurable classname whenever the
 * component's props change.
 */
function highlightOnUpdate(ComposedComponent,
/**
 * The result of this function determines whether to apply the highlight or not.
 */
arePropsEqual = _shallowequal.default,
/**
 * className used in the wrapper. You can style both `className` and `<className>-highlight`.
 */
className = 'nuclide-ui-highlight-on-render',
/**
 * Delay in ms until the `*-highlight` className gets removed from the wrapper.
 * Effectively throttles the frequency of highlight pulses.
 */
unhighlightDelay = 200) {
  var _temp;

  // $FlowIssue The return type is guaranteed to be the same as the type of ComposedComponent.
  return _temp = class extends React.Component {
    constructor(props) {
      super(props);
      this.showFlash = void 0;
      this.timeout = void 0;
      this.showFlash = false;
    }

    UNSAFE_componentWillUpdate(nextProps, nextState) {
      if (arePropsEqual(nextProps, this.props)) {
        // Skip if prop values didn't actually change.
        return;
      }

      if (this.timeout != null || this.showFlash) {
        // Skip if already scheduled.
        return;
      }

      this.showFlash = true;
      this.timeout = setTimeout(() => {
        this.showFlash = false;
        this.timeout = null;
        this.forceUpdate();
      }, unhighlightDelay);
    }

    render() {
      return /*#__PURE__*/React.createElement("span", {
        className: `${className} ${this.showFlash ? className + '-highlight' : ''}`
      }, /*#__PURE__*/React.createElement(ComposedComponent, this.props));
    }

  }, _temp;
}
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zLXVpL2hpZ2hsaWdodE9uVXBkYXRlLmpzIl0sIm5hbWVzIjpbImhpZ2hsaWdodE9uVXBkYXRlIiwiQ29tcG9zZWRDb21wb25lbnQiLCJhcmVQcm9wc0VxdWFsIiwic2hhbGxvd2VxdWFsIiwiY2xhc3NOYW1lIiwidW5oaWdobGlnaHREZWxheSIsIlJlYWN0IiwiQ29tcG9uZW50IiwiY29uc3RydWN0b3IiLCJwcm9wcyIsInNob3dGbGFzaCIsInRpbWVvdXQiLCJVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZSIsIm5leHRQcm9wcyIsIm5leHRTdGF0ZSIsInNldFRpbWVvdXQiLCJmb3JjZVVwZGF0ZSIsInJlbmRlciJdLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQVlBOztBQUNBOzs7Ozs7OztBQWJBOzs7Ozs7Ozs7Ozs7QUFlQTs7OztBQUlPLFNBQVNBLGlCQUFULENBSUxDLGlCQUpLO0FBS0w7OztBQUdBQyxhQUF5QyxHQUFHQyxxQkFSdkM7QUFTTDs7O0FBR0FDLFNBQWtCLEdBQUcsZ0NBWmhCO0FBYUw7Ozs7QUFJQUMsZ0JBQXlCLEdBQUcsR0FqQnZCLEVBa0JGO0FBQUE7O0FBQ0g7QUFDQSxpQkFBTyxjQUFjQyxLQUFLLENBQUNDLFNBQXBCLENBQXVDO0FBSTVDQyxJQUFBQSxXQUFXLENBQUNDLEtBQUQsRUFBVztBQUNwQixZQUFNQSxLQUFOO0FBRG9CLFdBSHRCQyxTQUdzQjtBQUFBLFdBRnRCQyxPQUVzQjtBQUVwQixXQUFLRCxTQUFMLEdBQWlCLEtBQWpCO0FBQ0Q7O0FBRURFLElBQUFBLDBCQUEwQixDQUFDQyxTQUFELEVBQWVDLFNBQWYsRUFBc0M7QUFDOUQsVUFBSVosYUFBYSxDQUFDVyxTQUFELEVBQVksS0FBS0osS0FBakIsQ0FBakIsRUFBMEM7QUFDeEM7QUFDQTtBQUNEOztBQUNELFVBQUksS0FBS0UsT0FBTCxJQUFnQixJQUFoQixJQUF3QixLQUFLRCxTQUFqQyxFQUE0QztBQUMxQztBQUNBO0FBQ0Q7O0FBQ0QsV0FBS0EsU0FBTCxHQUFpQixJQUFqQjtBQUNBLFdBQUtDLE9BQUwsR0FBZUksVUFBVSxDQUFDLE1BQU07QUFDOUIsYUFBS0wsU0FBTCxHQUFpQixLQUFqQjtBQUNBLGFBQUtDLE9BQUwsR0FBZSxJQUFmO0FBQ0EsYUFBS0ssV0FBTDtBQUNELE9BSndCLEVBSXRCWCxnQkFKc0IsQ0FBekI7QUFLRDs7QUFFRFksSUFBQUEsTUFBTSxHQUFlO0FBQ25CLDBCQUNFO0FBQ0UsUUFBQSxTQUFTLEVBQUcsR0FBRWIsU0FBVSxJQUN0QixLQUFLTSxTQUFMLEdBQWlCTixTQUFTLEdBQUcsWUFBN0IsR0FBNEMsRUFDN0M7QUFISCxzQkFJRSxvQkFBQyxpQkFBRCxFQUF1QixLQUFLSyxLQUE1QixDQUpGLENBREY7QUFRRDs7QUFuQzJDLEdBQTlDO0FBcUNEIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXHJcbiAqIENvcHlyaWdodCAoYykgMjAxNy1wcmVzZW50LCBGYWNlYm9vaywgSW5jLlxyXG4gKiBBbGwgcmlnaHRzIHJlc2VydmVkLlxyXG4gKlxyXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBCU0Qtc3R5bGUgbGljZW5zZSBmb3VuZCBpbiB0aGVcclxuICogTElDRU5TRSBmaWxlIGluIHRoZSByb290IGRpcmVjdG9yeSBvZiB0aGlzIHNvdXJjZSB0cmVlLiBBbiBhZGRpdGlvbmFsIGdyYW50XHJcbiAqIG9mIHBhdGVudCByaWdodHMgY2FuIGJlIGZvdW5kIGluIHRoZSBQQVRFTlRTIGZpbGUgaW4gdGhlIHNhbWUgZGlyZWN0b3J5LlxyXG4gKlxyXG4gKiBAZmxvd1xyXG4gKiBAZm9ybWF0XHJcbiAqL1xyXG5cclxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSAncmVhY3QnO1xyXG5pbXBvcnQgc2hhbGxvd2VxdWFsIGZyb20gJ3NoYWxsb3dlcXVhbCc7XHJcblxyXG4vKipcclxuICogV3JhcHMgRGVjb3JhdGVkQ29tcG9uZW50IGluIGEgc3BlY2lhbCBgc3BhbmAgd2l0aCBhIGNvbmZpZ3VyYWJsZSBjbGFzc25hbWUgd2hlbmV2ZXIgdGhlXHJcbiAqIGNvbXBvbmVudCdzIHByb3BzIGNoYW5nZS5cclxuICovXHJcbmV4cG9ydCBmdW5jdGlvbiBoaWdobGlnaHRPblVwZGF0ZTxcclxuICBUOiBSZWFjdC5Db21wb25lbnRUeXBlPGFueT4sXHJcbiAgUDogeytba2V5OiBzdHJpbmddOiBtaXhlZH0sXHJcbj4oXHJcbiAgQ29tcG9zZWRDb21wb25lbnQ6IFQsXHJcbiAgLyoqXHJcbiAgICogVGhlIHJlc3VsdCBvZiB0aGlzIGZ1bmN0aW9uIGRldGVybWluZXMgd2hldGhlciB0byBhcHBseSB0aGUgaGlnaGxpZ2h0IG9yIG5vdC5cclxuICAgKi9cclxuICBhcmVQcm9wc0VxdWFsPzogKHAxOiBQLCBwMjogUCkgPT4gYm9vbGVhbiA9IHNoYWxsb3dlcXVhbCxcclxuICAvKipcclxuICAgKiBjbGFzc05hbWUgdXNlZCBpbiB0aGUgd3JhcHBlci4gWW91IGNhbiBzdHlsZSBib3RoIGBjbGFzc05hbWVgIGFuZCBgPGNsYXNzTmFtZT4taGlnaGxpZ2h0YC5cclxuICAgKi9cclxuICBjbGFzc05hbWU/OiBzdHJpbmcgPSAnbnVjbGlkZS11aS1oaWdobGlnaHQtb24tcmVuZGVyJyxcclxuICAvKipcclxuICAgKiBEZWxheSBpbiBtcyB1bnRpbCB0aGUgYCotaGlnaGxpZ2h0YCBjbGFzc05hbWUgZ2V0cyByZW1vdmVkIGZyb20gdGhlIHdyYXBwZXIuXHJcbiAgICogRWZmZWN0aXZlbHkgdGhyb3R0bGVzIHRoZSBmcmVxdWVuY3kgb2YgaGlnaGxpZ2h0IHB1bHNlcy5cclxuICAgKi9cclxuICB1bmhpZ2hsaWdodERlbGF5PzogbnVtYmVyID0gMjAwLFxyXG4pOiBUIHtcclxuICAvLyAkRmxvd0lzc3VlIFRoZSByZXR1cm4gdHlwZSBpcyBndWFyYW50ZWVkIHRvIGJlIHRoZSBzYW1lIGFzIHRoZSB0eXBlIG9mIENvbXBvc2VkQ29tcG9uZW50LlxyXG4gIHJldHVybiBjbGFzcyBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxQLCB2b2lkPiB7XHJcbiAgICBzaG93Rmxhc2g6IGJvb2xlYW47XHJcbiAgICB0aW1lb3V0OiA/VGltZW91dElEO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByb3BzOiBQKSB7XHJcbiAgICAgIHN1cGVyKHByb3BzKTtcclxuICAgICAgdGhpcy5zaG93Rmxhc2ggPSBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICBVTlNBRkVfY29tcG9uZW50V2lsbFVwZGF0ZShuZXh0UHJvcHM6IFAsIG5leHRTdGF0ZTogdm9pZCk6IHZvaWQge1xyXG4gICAgICBpZiAoYXJlUHJvcHNFcXVhbChuZXh0UHJvcHMsIHRoaXMucHJvcHMpKSB7XHJcbiAgICAgICAgLy8gU2tpcCBpZiBwcm9wIHZhbHVlcyBkaWRuJ3QgYWN0dWFsbHkgY2hhbmdlLlxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICBpZiAodGhpcy50aW1lb3V0ICE9IG51bGwgfHwgdGhpcy5zaG93Rmxhc2gpIHtcclxuICAgICAgICAvLyBTa2lwIGlmIGFscmVhZHkgc2NoZWR1bGVkLlxyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgICB0aGlzLnNob3dGbGFzaCA9IHRydWU7XHJcbiAgICAgIHRoaXMudGltZW91dCA9IHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgIHRoaXMuc2hvd0ZsYXNoID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy50aW1lb3V0ID0gbnVsbDtcclxuICAgICAgICB0aGlzLmZvcmNlVXBkYXRlKCk7XHJcbiAgICAgIH0sIHVuaGlnaGxpZ2h0RGVsYXkpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlbmRlcigpOiBSZWFjdC5Ob2RlIHtcclxuICAgICAgcmV0dXJuIChcclxuICAgICAgICA8c3BhblxyXG4gICAgICAgICAgY2xhc3NOYW1lPXtgJHtjbGFzc05hbWV9ICR7XHJcbiAgICAgICAgICAgIHRoaXMuc2hvd0ZsYXNoID8gY2xhc3NOYW1lICsgJy1oaWdobGlnaHQnIDogJydcclxuICAgICAgICAgIH1gfT5cclxuICAgICAgICAgIDxDb21wb3NlZENvbXBvbmVudCB7Li4udGhpcy5wcm9wc30gLz5cclxuICAgICAgICA8L3NwYW4+XHJcbiAgICAgICk7XHJcbiAgICB9XHJcbiAgfTtcclxufVxyXG4iXX0=