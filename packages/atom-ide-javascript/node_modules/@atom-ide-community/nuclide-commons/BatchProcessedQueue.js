"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

/**
 * Copyright (c) 2017-present, Facebook, Inc.
 * All rights reserved.
 *
 * This source code is licensed under the BSD-style license found in the
 * LICENSE file in the root directory of this source tree. An additional grant
 * of patent rights can be found in the PATENTS file in the same directory.
 *
 * 
 * @format
 */
// A Queue which will process elements at intervals, only if the
// queue contains any elements.
class BatchProcessedQueue {
  constructor(batchPeriod, handler) {
    this._batchPeriod = void 0;
    this._handler = void 0;
    this._timeoutId = void 0;
    this._items = void 0;
    this._batchPeriod = batchPeriod;
    this._handler = handler;
    this._timeoutId = null;
    this._items = [];
  }

  add(item) {
    this._items.push(item); // eslint-disable-next-line eqeqeq


    if (this._timeoutId === null) {
      this._timeoutId = setTimeout(() => {
        this._handleBatch();
      }, this._batchPeriod);
    }
  }

  _handleBatch() {
    this._timeoutId = null;
    const batch = this._items;
    this._items = [];

    this._handler(batch);
  }

  dispose() {
    // eslint-disable-next-line eqeqeq
    if (this._timeoutId !== null) {
      clearTimeout(this._timeoutId);

      this._handleBatch();
    }
  }

}

exports.default = BatchProcessedQueue;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL251Y2xpZGUvbnVjbGlkZS1jb21tb25zL0JhdGNoUHJvY2Vzc2VkUXVldWUuanMiXSwibmFtZXMiOlsiQmF0Y2hQcm9jZXNzZWRRdWV1ZSIsImNvbnN0cnVjdG9yIiwiYmF0Y2hQZXJpb2QiLCJoYW5kbGVyIiwiX2JhdGNoUGVyaW9kIiwiX2hhbmRsZXIiLCJfdGltZW91dElkIiwiX2l0ZW1zIiwiYWRkIiwiaXRlbSIsInB1c2giLCJzZXRUaW1lb3V0IiwiX2hhbmRsZUJhdGNoIiwiYmF0Y2giLCJkaXNwb3NlIiwiY2xlYXJUaW1lb3V0Il0sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQUE7Ozs7Ozs7Ozs7O0FBY0E7QUFDQTtBQUNlLE1BQU1BLG1CQUFOLENBQTZCO0FBTTFDQyxFQUFBQSxXQUFXLENBQUNDLFdBQUQsRUFBc0JDLE9BQXRCLEVBQWdEO0FBQUEsU0FMM0RDLFlBSzJEO0FBQUEsU0FKM0RDLFFBSTJEO0FBQUEsU0FIM0RDLFVBRzJEO0FBQUEsU0FGM0RDLE1BRTJEO0FBQ3pELFNBQUtILFlBQUwsR0FBb0JGLFdBQXBCO0FBQ0EsU0FBS0csUUFBTCxHQUFnQkYsT0FBaEI7QUFDQSxTQUFLRyxVQUFMLEdBQWtCLElBQWxCO0FBQ0EsU0FBS0MsTUFBTCxHQUFjLEVBQWQ7QUFDRDs7QUFFREMsRUFBQUEsR0FBRyxDQUFDQyxJQUFELEVBQWdCO0FBQ2pCLFNBQUtGLE1BQUwsQ0FBWUcsSUFBWixDQUFpQkQsSUFBakIsRUFEaUIsQ0FFakI7OztBQUNBLFFBQUksS0FBS0gsVUFBTCxLQUFvQixJQUF4QixFQUE4QjtBQUM1QixXQUFLQSxVQUFMLEdBQWtCSyxVQUFVLENBQUMsTUFBTTtBQUNqQyxhQUFLQyxZQUFMO0FBQ0QsT0FGMkIsRUFFekIsS0FBS1IsWUFGb0IsQ0FBNUI7QUFHRDtBQUNGOztBQUVEUSxFQUFBQSxZQUFZLEdBQUc7QUFDYixTQUFLTixVQUFMLEdBQWtCLElBQWxCO0FBQ0EsVUFBTU8sS0FBSyxHQUFHLEtBQUtOLE1BQW5CO0FBQ0EsU0FBS0EsTUFBTCxHQUFjLEVBQWQ7O0FBQ0EsU0FBS0YsUUFBTCxDQUFjUSxLQUFkO0FBQ0Q7O0FBRURDLEVBQUFBLE9BQU8sR0FBUztBQUNkO0FBQ0EsUUFBSSxLQUFLUixVQUFMLEtBQW9CLElBQXhCLEVBQThCO0FBQzVCUyxNQUFBQSxZQUFZLENBQUMsS0FBS1QsVUFBTixDQUFaOztBQUNBLFdBQUtNLFlBQUw7QUFDRDtBQUNGOztBQXBDeUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcclxuICogQ29weXJpZ2h0IChjKSAyMDE3LXByZXNlbnQsIEZhY2Vib29rLCBJbmMuXHJcbiAqIEFsbCByaWdodHMgcmVzZXJ2ZWQuXHJcbiAqXHJcbiAqIFRoaXMgc291cmNlIGNvZGUgaXMgbGljZW5zZWQgdW5kZXIgdGhlIEJTRC1zdHlsZSBsaWNlbnNlIGZvdW5kIGluIHRoZVxyXG4gKiBMSUNFTlNFIGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuIEFuIGFkZGl0aW9uYWwgZ3JhbnRcclxuICogb2YgcGF0ZW50IHJpZ2h0cyBjYW4gYmUgZm91bmQgaW4gdGhlIFBBVEVOVFMgZmlsZSBpbiB0aGUgc2FtZSBkaXJlY3RvcnkuXHJcbiAqXHJcbiAqIEBmbG93IHN0cmljdFxyXG4gKiBAZm9ybWF0XHJcbiAqL1xyXG5cclxuZXhwb3J0IHR5cGUgQmF0Y2hIYW5kbGVyPFQ+ID0gKGJhdGNoOiBBcnJheTxUPikgPT4gdm9pZDtcclxuXHJcbi8vIEEgUXVldWUgd2hpY2ggd2lsbCBwcm9jZXNzIGVsZW1lbnRzIGF0IGludGVydmFscywgb25seSBpZiB0aGVcclxuLy8gcXVldWUgY29udGFpbnMgYW55IGVsZW1lbnRzLlxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYXRjaFByb2Nlc3NlZFF1ZXVlPFQ+IHtcclxuICBfYmF0Y2hQZXJpb2Q6IG51bWJlcjtcclxuICBfaGFuZGxlcjogQmF0Y2hIYW5kbGVyPFQ+O1xyXG4gIF90aW1lb3V0SWQ6ID9UaW1lb3V0SUQ7XHJcbiAgX2l0ZW1zOiBBcnJheTxUPjtcclxuXHJcbiAgY29uc3RydWN0b3IoYmF0Y2hQZXJpb2Q6IG51bWJlciwgaGFuZGxlcjogQmF0Y2hIYW5kbGVyPFQ+KSB7XHJcbiAgICB0aGlzLl9iYXRjaFBlcmlvZCA9IGJhdGNoUGVyaW9kO1xyXG4gICAgdGhpcy5faGFuZGxlciA9IGhhbmRsZXI7XHJcbiAgICB0aGlzLl90aW1lb3V0SWQgPSBudWxsO1xyXG4gICAgdGhpcy5faXRlbXMgPSBbXTtcclxuICB9XHJcblxyXG4gIGFkZChpdGVtOiBUKTogdm9pZCB7XHJcbiAgICB0aGlzLl9pdGVtcy5wdXNoKGl0ZW0pO1xyXG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIGVxZXFlcVxyXG4gICAgaWYgKHRoaXMuX3RpbWVvdXRJZCA9PT0gbnVsbCkge1xyXG4gICAgICB0aGlzLl90aW1lb3V0SWQgPSBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICB0aGlzLl9oYW5kbGVCYXRjaCgpO1xyXG4gICAgICB9LCB0aGlzLl9iYXRjaFBlcmlvZCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBfaGFuZGxlQmF0Y2goKSB7XHJcbiAgICB0aGlzLl90aW1lb3V0SWQgPSBudWxsO1xyXG4gICAgY29uc3QgYmF0Y2ggPSB0aGlzLl9pdGVtcztcclxuICAgIHRoaXMuX2l0ZW1zID0gW107XHJcbiAgICB0aGlzLl9oYW5kbGVyKGJhdGNoKTtcclxuICB9XHJcblxyXG4gIGRpc3Bvc2UoKTogdm9pZCB7XHJcbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgZXFlcWVxXHJcbiAgICBpZiAodGhpcy5fdGltZW91dElkICE9PSBudWxsKSB7XHJcbiAgICAgIGNsZWFyVGltZW91dCh0aGlzLl90aW1lb3V0SWQpO1xyXG4gICAgICB0aGlzLl9oYW5kbGVCYXRjaCgpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG4iXX0=