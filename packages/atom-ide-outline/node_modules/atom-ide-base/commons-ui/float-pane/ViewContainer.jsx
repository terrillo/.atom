"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ViewContainer = exports.DATATIP_ACTIONS = void 0;
const MarkdownView_1 = require("./MarkdownView");
const SnippetView_1 = require("./SnippetView");
const ReactView_1 = require("./ReactView");
exports.DATATIP_ACTIONS = Object.freeze({
    PIN: "PIN",
    CLOSE: "CLOSE",
});
const IconsForAction = {
    [exports.DATATIP_ACTIONS.PIN]: "pin",
    [exports.DATATIP_ACTIONS.CLOSE]: "x",
};
/** A component for a decoration pane */
function ViewContainer(props) {
    var _a;
    return (<div className={(_a = props.className) !== null && _a !== void 0 ? _a : "datatip-element"} {...props.onMouseDown} {...props.onClickCapture}>
      {props.component !== undefined ? <ReactView_1.ReactView {...props.component}/> : undefined}
      {props.snippet !== undefined ? <SnippetView_1.SnippetView {...props.snippet}/> : undefined}
      {props.markdown !== undefined ? <MarkdownView_1.MarkdownView {...props.markdown}/> : undefined}
      {props.action !== undefined ? (<div className={`datatip-pin-button icon-${IconsForAction[props.action]}`} onClick={() => {
                var _a;
                (_a = props.onActionClick) === null || _a === void 0 ? void 0 : _a.call(props, event);
            }} title={props.actionTitle}/>) : undefined}
    </div>);
}
exports.ViewContainer = ViewContainer;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiVmlld0NvbnRhaW5lci5qc3giLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMtY29tbW9ucy11aS9mbG9hdC1wYW5lL1ZpZXdDb250YWluZXIudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7OztBQUFBLGlEQUF5RTtBQUN6RSwrQ0FBc0U7QUFDdEUsMkNBQWdFO0FBRW5ELFFBQUEsZUFBZSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUM7SUFDM0MsR0FBRyxFQUFFLEtBQUs7SUFDVixLQUFLLEVBQUUsT0FBTztDQUNmLENBQUMsQ0FBQTtBQUVGLE1BQU0sY0FBYyxHQUFHO0lBQ3JCLENBQUMsdUJBQWUsQ0FBQyxHQUFHLENBQUMsRUFBRSxLQUFLO0lBQzVCLENBQUMsdUJBQWUsQ0FBQyxLQUFLLENBQUMsRUFBRSxHQUFHO0NBQzdCLENBQUE7QUFjRCx3Q0FBd0M7QUFDeEMsU0FBZ0IsYUFBYSxDQUFDLEtBQVk7O0lBQ3hDLE9BQU8sQ0FDTCxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQyxNQUFBLEtBQUssQ0FBQyxTQUFTLG1DQUFJLGlCQUFpQixDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsV0FBVyxDQUFDLENBQUMsSUFBSSxLQUFLLENBQUMsY0FBYyxDQUFDLENBQ3BHO01BQUEsQ0FBQyxLQUFLLENBQUMsU0FBUyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxxQkFBUyxDQUFDLElBQUksS0FBSyxDQUFDLFNBQVMsQ0FBQyxFQUFHLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FDL0U7TUFBQSxDQUFDLEtBQUssQ0FBQyxPQUFPLEtBQUssU0FBUyxDQUFDLENBQUMsQ0FBQyxDQUFDLHlCQUFXLENBQUMsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLEVBQUcsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUM3RTtNQUFBLENBQUMsS0FBSyxDQUFDLFFBQVEsS0FBSyxTQUFTLENBQUMsQ0FBQyxDQUFDLENBQUMsMkJBQVksQ0FBQyxJQUFJLEtBQUssQ0FBQyxRQUFRLENBQUMsRUFBRyxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQ2hGO01BQUEsQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUMsQ0FDNUIsQ0FBQyxHQUFHLENBQ0YsU0FBUyxDQUFDLENBQUMsMkJBQTJCLGNBQWMsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUNyRSxPQUFPLENBQUMsQ0FBQyxHQUFHLEVBQUU7O2dCQUNaLE1BQUEsS0FBSyxDQUFDLGFBQWEsK0NBQW5CLEtBQUssRUFBaUIsS0FBSyxDQUFDLENBQUE7WUFDOUIsQ0FBQyxDQUFDLENBQ0YsS0FBSyxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxFQUN6QixDQUNILENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FDZjtJQUFBLEVBQUUsR0FBRyxDQUFDLENBQ1AsQ0FBQTtBQUNILENBQUM7QUFqQkQsc0NBaUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTWFya2Rvd25WaWV3LCBQcm9wcyBhcyBNYXJrZG93blZpZXdQcm9wcyB9IGZyb20gXCIuL01hcmtkb3duVmlld1wiXG5pbXBvcnQgeyBTbmlwcGV0VmlldywgUHJvcHMgYXMgU25pcHBldFZpZXdQcm9wcyB9IGZyb20gXCIuL1NuaXBwZXRWaWV3XCJcbmltcG9ydCB7IFJlYWN0VmlldywgUHJvcHMgYXMgUmVhY3RWaWV3UHJvcHMgfSBmcm9tIFwiLi9SZWFjdFZpZXdcIlxuXG5leHBvcnQgY29uc3QgREFUQVRJUF9BQ1RJT05TID0gT2JqZWN0LmZyZWV6ZSh7XG4gIFBJTjogXCJQSU5cIixcbiAgQ0xPU0U6IFwiQ0xPU0VcIixcbn0pXG5cbmNvbnN0IEljb25zRm9yQWN0aW9uID0ge1xuICBbREFUQVRJUF9BQ1RJT05TLlBJTl06IFwicGluXCIsXG4gIFtEQVRBVElQX0FDVElPTlMuQ0xPU0VdOiBcInhcIixcbn1cblxuZXhwb3J0IGludGVyZmFjZSBQcm9wcyB7XG4gIGNvbXBvbmVudD86IFJlYWN0Vmlld1Byb3BzXG4gIG1hcmtkb3duPzogTWFya2Rvd25WaWV3UHJvcHNcbiAgc25pcHBldD86IFNuaXBwZXRWaWV3UHJvcHNcbiAgYWN0aW9uPzogc3RyaW5nXG4gIGFjdGlvblRpdGxlPzogc3RyaW5nXG4gIGNsYXNzTmFtZT86IHN0cmluZ1xuICBvbkFjdGlvbkNsaWNrPzogKGV2ZW50OiBhbnkpID0+IHZvaWRcbiAgb25Nb3VzZURvd24/OiAoZXZlbnQ6IGFueSkgPT4gdm9pZFxuICBvbkNsaWNrQ2FwdHVyZT86IChldmVudDogYW55KSA9PiB2b2lkXG59XG5cbi8qKiBBIGNvbXBvbmVudCBmb3IgYSBkZWNvcmF0aW9uIHBhbmUgKi9cbmV4cG9ydCBmdW5jdGlvbiBWaWV3Q29udGFpbmVyKHByb3BzOiBQcm9wcykge1xuICByZXR1cm4gKFxuICAgIDxkaXYgY2xhc3NOYW1lPXtwcm9wcy5jbGFzc05hbWUgPz8gXCJkYXRhdGlwLWVsZW1lbnRcIn0gey4uLnByb3BzLm9uTW91c2VEb3dufSB7Li4ucHJvcHMub25DbGlja0NhcHR1cmV9PlxuICAgICAge3Byb3BzLmNvbXBvbmVudCAhPT0gdW5kZWZpbmVkID8gPFJlYWN0VmlldyB7Li4ucHJvcHMuY29tcG9uZW50fSAvPiA6IHVuZGVmaW5lZH1cbiAgICAgIHtwcm9wcy5zbmlwcGV0ICE9PSB1bmRlZmluZWQgPyA8U25pcHBldFZpZXcgey4uLnByb3BzLnNuaXBwZXR9IC8+IDogdW5kZWZpbmVkfVxuICAgICAge3Byb3BzLm1hcmtkb3duICE9PSB1bmRlZmluZWQgPyA8TWFya2Rvd25WaWV3IHsuLi5wcm9wcy5tYXJrZG93bn0gLz4gOiB1bmRlZmluZWR9XG4gICAgICB7cHJvcHMuYWN0aW9uICE9PSB1bmRlZmluZWQgPyAoXG4gICAgICAgIDxkaXZcbiAgICAgICAgICBjbGFzc05hbWU9e2BkYXRhdGlwLXBpbi1idXR0b24gaWNvbi0ke0ljb25zRm9yQWN0aW9uW3Byb3BzLmFjdGlvbl19YH1cbiAgICAgICAgICBvbkNsaWNrPXsoKSA9PiB7XG4gICAgICAgICAgICBwcm9wcy5vbkFjdGlvbkNsaWNrPy4oZXZlbnQpXG4gICAgICAgICAgfX1cbiAgICAgICAgICB0aXRsZT17cHJvcHMuYWN0aW9uVGl0bGV9XG4gICAgICAgIC8+XG4gICAgICApIDogdW5kZWZpbmVkfVxuICAgIDwvZGl2PlxuICApXG59XG4iXX0=