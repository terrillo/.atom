{
  "_from": "zadeh@3.0.0-beta.4",
  "_id": "zadeh@3.0.0-beta.4",
  "_inBundle": false,
  "_integrity": "sha512-tl65LekkDnEj2FPX7Bgx8uz0rXOP+UBTgGN7nva7uwX+9lOe4ECuQCeBr40ajHUwW+oJ50vusbnxjdkI/mmiqw==",
  "_location": "/ide-python/zadeh",
  "_phantomChildren": {},
  "_requested": {
    "type": "version",
    "registry": true,
    "raw": "zadeh@3.0.0-beta.4",
    "name": "zadeh",
    "escapedName": "zadeh",
    "rawSpec": "3.0.0-beta.4",
    "saveSpec": null,
    "fetchSpec": "3.0.0-beta.4"
  },
  "_requiredBy": [
    "/ide-python/atom-languageclient"
  ],
  "_resolved": "https://registry.npmjs.org/zadeh/-/zadeh-3.0.0-beta.4.tgz",
  "_shasum": "0f2d62486cc5189902527fa2d8cf93e92d8cb03a",
  "_spec": "zadeh@3.0.0-beta.4",
  "_where": "/private/var/folders/6j/tmyxg441747ck6nt_c96gnpc0000gn/T/apm-install-dir-20211012-20236-rfg8sj.6o6op/node_modules/ide-python/node_modules/atom-languageclient",
  "author": {
    "name": "Amin Yahyaabadi, Rajendran T"
  },
  "bugs": {
    "url": "https://github.com/atom-ide-community/zadeh/issues"
  },
  "bundleDependencies": false,
  "dependencies": {
    "node-addon-api": "~4.0.0",
    "node-gyp-build": "^4.2.3"
  },
  "deprecated": false,
  "description": "Blazing fast library for fuzzy filtering, matching, and other fuzzy things!",
  "devDependencies": {
    "coffeescript": "^2.5.1",
    "cross-env": "^7.0.3",
    "eslint-config-atomic": "^1.16.1",
    "fast-equals": "^2.0.3",
    "fuzzaldrin-plus": "^0.6.0",
    "jasmine": "^3.7.0",
    "parcel": "2.0.0-nightly.733",
    "prebuildify": "^4.1.2",
    "prettier-config-atomic": "^2.0.5",
    "shx": "^0.3.3",
    "terser-config-atomic": "^0.1.1",
    "typescript": "^4.3.4"
  },
  "engines": {
    "atom": ">=1.52.0 <2.0.0",
    "electron": ">=6.0.0",
    "node": ">=12.0.0"
  },
  "files": [
    "src",
    "prebuilds",
    "index.*",
    "*.d.ts",
    "binding.gyp"
  ],
  "gypfile": true,
  "homepage": "https://github.com/atom-ide-community/zadeh",
  "license": "MIT",
  "main": "./index.js",
  "name": "zadeh",
  "node": "./index.js",
  "prettier": "prettier-config-atomic",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/atom-ide-community/zadeh.git"
  },
  "scripts": {
    "benchmark": "npm run benchmark.small && npm run benchmark.regular && npm run benchmark.large && npm run benchmark.tree",
    "benchmark.large": "node benchmark/benchmark-large.js",
    "benchmark.regular": "node benchmark/benchmark.js",
    "benchmark.small": "node benchmark/benchmark-small.js",
    "benchmark.tree": "node benchmark/benchmark-tree.js",
    "build": "npm run build.native && npm run build.js",
    "build.js": "npm run types.js && cross-env NODE_ENV=production parcel build --target main ./src/binding/index.ts",
    "build.native": "node-gyp configure --release && node-gyp build --release",
    "build.native.debug": "node-gyp configure --debug && node-gyp build --debug",
    "bump": "ncu -u && ncu -u /parcel/ --greatest",
    "clean": "npm run clean.native && npm run clean.js",
    "clean.js": "shx rm -rf dist dist-test .rollup.cache .parcel-cache **/tsconfig.tsbuildinfo ./index.* ./*.d.ts",
    "clean.native": "shx rm -rf build prebuilds",
    "dev.js": "npm run types.js && cross-env NODE_ENV=development parcel watch --target main ./src/binding/index.ts",
    "examples.cpp": "cmake -S . -B ./build && cmake --build ./build --config Debug",
    "format": "prettier --write . && clang-format -i src/*.h src/binding/*.cc src/binding/*.h",
    "install": "node-gyp-build",
    "lint": "eslint . --fix",
    "prebuild.native": "prebuildify --napi -t 12.0.0 -t electron@6.0.0 -t electron@9.3.5 --strip --tag-libc",
    "prebuild.native.ia32": "prebuildify --napi --arch=ia32 -t 12.0.0 -t electron@6.0.0 -t electron@9.3.5 --strip --tag-libc",
    "test": "shx rm -rf dist-test && shx cp -r test dist-test && coffee --compile dist-test && shx rm -rf dist-test/*.coffee && jasmine dist-test/*-spec.js",
    "test.format": "prettier . --check",
    "test.lint": "eslint .",
    "tidy": "clang-tidy src/*.cc src/*.h",
    "tidy.fix": "clang-tidy src/*.cc src/*.h --fix --fix-errors",
    "types.js": "tsc -p ./src/binding/tsconfig.json --emitDeclarationOnly && shx mv ./src/binding/*.d.ts ."
  },
  "source": "./src/binding/index.ts",
  "targets": {
    "main": {
      "context": "node",
      "includeNodeModules": {
        "node-gyp-build": false
      },
      "outputFormat": "commonjs",
      "isLibrary": true
    }
  },
  "version": "3.0.0-beta.4"
}
