".source.js":
  "React: import empty()":
    prefix: "_i"
    body: "import ${1} from '${2}';"

  "React: import()":
    prefix: "_ir"
    body: "import React from 'react';"

  "React: import() with Component":
    prefix: "_irc"
    body: "import React, { Component } from 'react';"

  "React: import() with PropTypes":
    prefix: "_irp"
    body: "import React from 'react';\nimport PropTypes from 'prop-types';"

  "React: import react-dom()":
    prefix: "_ird"
    body: "import ReactDOM from 'react-dom';"

  "React: export empty()":
    prefix: "_ex"
    body: "export ${1};"

  "React: export default empty()":
    prefix: "_exd"
    body: "export default ${1};"

  "React: componentDidMount() { ... }":
    prefix: "_cdm"
    body: "componentDidMount() {\n\t${1}\n}${2}"

  "React: componentDidUpdate(pp, ps) { ... }":
    prefix: "_cdup"
    body: "componentDidUpdate(prevProps, prevState) {\n\t${1}\n}${2}"

  "React: componentWillMount() { ... }":
    prefix: "_cwm"
    body: "componentWillMount() {\n\t${1}\n}${2}"

  "React: componentWillReceiveProps(np) { ... }":
    prefix: "_cwr"
    body: "componentWillReceiveProps(nextProps) {\n\t${1}\n}${2}"

  "React: componentWillUnmount() { ... }":
    prefix: "_cwun"
    body: "componentWillUnmount() {\n\t${1}\n}${2}"

  "React: componentWillUpdate(np, ns) { ... }":
    prefix: "_cwu"
    body: "componentWillUpdate(nextProps, nextState) {\n\t${1}\n}${2}"

  "React: cx({ ... })":
    prefix: "_cx"
    body: "cx({\n\t$1: $2\n});"

  "React: forceUpdate(...)":
    prefix: "_fup"
    body: "forceUpdate(${1:callback});"

  "React: getDefaultProps() { return {...} } ":
    prefix: "_gdp"
    body: "getDefaultProps() {\n\treturn {\n\t\t${1}\n\t};\n},"

  "React: getInitialState() { return {...} } ":
    prefix: "_gis"
    body: "getInitialState() {\n\treturn {\n\t\t${1}: ${2}\n\t};\n},"

  "React: isMounted()":
    prefix: "_ism"
    body: "isMounted()"

  "React: Class.contextTypes = { ... }":
    prefix: "_cct"
    body: "${1}.contextTypes = {\n\t${2}: PropTypes.${3:string}\n};"

  "React: Class.propTypes = { ... }":
    prefix: "_cpt"
    body: "${1}.propTypes = {\n\t${2}: PropTypes.${3:string}\n};"

  "React: Class.defaultProps = { ... }":
    prefix: "_cdp"
    body: "${1}.defaultProps = {\n\t${2}: ${3}\n};"

  "React: static contextTypes = { ... }":
    prefix: "_scct"
    body: "static contextTypes = {\n\t${1}: PropTypes.${2:string}\n}"

  "React: static propTypes = { ... }":
    prefix: "_scpt"
    body: "static propTypes = {\n\t${1}: PropTypes.${2:string}\n}"

  "React: static defaultProps = { ... }":
    prefix: "_scdp"
    body: "static defaultProps = {\n\t${1}: ${2}\n}"

  "React: propTypes { ... }":
    prefix: "_pt"
    body: "propTypes: {\n\t${1}: PropTypes.${2:string}\n},"

  "React: class skeleton":
    prefix: "_cer"
    body: "import React, { Component } from 'react';\n\nclass ${1} extends Component {\n\n\trender() {\n\t\treturn (\n\t\t\t${2:<div></div>}\n\t\t);\n\t}\n\n}\n\nexport default ${1};"

  "React: createClass skeleton":
    prefix: "_rcc"
    body: "import React from 'react';\n\nexport default React.createClass({\n\n\trender() {\n\t\treturn (\n\t\t\t${1:<div></div>}\n\t\t);\n\t}\n\n});"

  "React: Stateless Component":
    prefix: "_rsc"
    body: "import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ${1} = ({${2}}) => (\n\t<div>${4}</div>\n);\n\n${1}.propTypes = {\n\t${2}: PropTypes.${3}\n};\n\nexport default ${1};"

  "React: Stateless Component Return":
    prefix: "_rscr"
    body: "import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ${1} = ({${2}}) => {\n\treturn (\n\t\t<div>${4}</div>\n\t);\n}\n\n${1}.propTypes = {\n\t${2}: PropTypes.${3}\n};\n\nexport default ${1};"

  "React: Stateless Component Click":
    prefix: "_rscc"
    body: "import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ${1} = ({${2}}) => {\n\tconst handleClick = () => {};\n\treturn (\n\t\t<div onClick={handleClick}>${4}</div>\n\t);\n}\n\n${1}.propTypes = {\n\t${2}: PropTypes.${3}\n};\n\nexport default ${1};"

  "React: Stateless Component PropTypes":
    prefix: "_rscp"
    body: "import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst ${1} = ({${2}}) => (\n\t<div>${4}</div>\n);\n\n${1}.propTypes = {\n\t${2}: PropTypes.${3}\n};\n\nexport default ${1};"

  "React: Stateless Function":
    prefix: "_rsf"
    body: "const ${1} = ({${2}}) => (\n\t<div>{${2}}</div>\n);"

  "React: Component displayName":
    prefix: "_cdn"
    body: "${1}.displayName = '${1}';"

  "React: render() { return ... }":
    prefix: "_ren"
    body: "render() {\n\treturn (\n\t\t${1:<div></div>}\n\t);\n}"

  "React: setState({ ... })":
    prefix: "_sst"
    body: "this.setState({\n\t${1}: ${2}\n});"

  "React: shouldComponentUpdate(np, ns) { ... }":
    prefix: "_scu"
    body: "shouldComponentUpdate(nextProps, nextState) {\n\t${1}\n}${2}"

  "React: this.props.":
    prefix: "_props"
    body: "this.props.${1}"

  "React: this.state.":
    prefix: "_state"
    body: "this.state.${1}"

  "React: render(component, container, [callback])":
    prefix: "_rrc"
    body: "React.render(${1:<$2 />}, ${3:document.body}${4:, ${5:callback}});"

  "React: constructor(props)":
    prefix: "_cns"
    body: "constructor(props) {\n\tsuper(props);\n\t${1:this.state = ${2};}\n}"

  "React: class Foo extends Bar":
    prefix: "_clss"
    body: "class ${1:Foo} extends ${2:React.Component} {\n\trender() {\n\t\t${3}\n\t}\n}"

  "React: dangerouslySetInnerHTML":
    prefix: "_dnghtml"
    body: "dangerouslySetInnerHTML={{__html: ${1}}}"

  # PropType string
  'React: PropType string':
    'prefix': '_rpstr',
    'body': "${1:myProp}: PropTypes.string,"
  'React: PropType string required':
    'prefix': '_rpstrr',
    'body': "${1:myProp}: PropTypes.string.isRequired,"

  # PropType number
  'React: PropType number':
    'prefix': '_rpn',
    'body': "${1:myProp}: PropTypes.number,"
  'React: PropType number required':
    'prefix': 'rpnr',
    'body': "${1:myProp}: PropTypes.number.isRequired,"

  # PropType object
  'React: PropType object':
    'prefix': '_rpo',
    'body': "${1:myProp}: PropTypes.object,"
  'React: PropType object required':
    'prefix': '_rpor',
    'body': "${1:myProp}: PropTypes.object.isRequired,"

  # PropType array
  'React: PropType array':
    'prefix': '_rpa',
    'body': "${1:myProp}: PropTypes.array,"
  'React: PropType array required':
    'prefix': '_rpar',
    'body': "${1:myProp}: PropTypes.array.isRequired,"

  # PropType bool
  'React: PropType bool':
    'prefix': '_rpb',
    'body': "${1:myProp}: PropTypes.bool,"
  'React: PropType bool required':
    'prefix': '_rpbr',
    'body': "${1:myProp}: PropTypes.bool.isRequired,"

  # PropType element
  'React: PropType element':
    'prefix': '_rpe',
    'body': "${1:myProp}: PropTypes.element,"
  'React: PropType element required':
    'prefix': '_rper',
    'body': "${1:myProp}: PropTypes.element.isRequired,"

  # PropType function
  'React: PropType function':
    'prefix': '_rpf',
    'body': "${1:myProp}: PropTypes.func,"
  'React: PropType function required':
    'prefix': '_rpfr',
    'body': "${1:myProp}: PropTypes.func.isRequired,"

  # PropType shape
  'React: PropType shape':
    'prefix': '_rps',
    'body': """
      ${1:myProp}: PropTypes.shape({
        ${2}
      }),
    """
  'React: PropType shape required':
    'prefix': '_rpsr',
    'body': """
      ${1:myProp}: PropTypes.shape({
        ${2}
      }).isRequired,
    """

  'React: PropType oneOf':
    'prefix': '_rpoo',
    'body': """
        PropTypes.oneOf([
          ${1},
        ]),
    """

  'React: PropType oneOfType':
    'prefix': '_rpoot',
    'body': """
        PropTypes.oneOfType([
          ${1:PropTypes.},
        ]),
    """
